{"version":3,"sources":["utils/UserContext.jsx","utils/Actions.js","components/QuickActionsBtn/index.js","pages/Home/RecentMenu.js","pages/Home/ActionsMenu.js","pages/Home/index.js","utils/axiosCustom.js","utils/API/index.js","utils/API/UserAPI.js","utils/API/BankAPI.js","utils/API/ApplicationAPI.js","utils/API/TransactionsAPI.js","utils/API/AccountsAPI.js","components/TextInput/index.js","pages/Login/index.js","pages/NotFound/index.js","components/Form/FormTextInput.js","components/Form/FormPhoneInput.js","components/Form/FormEmailInput.js","components/Form/FormCheckboxInput.js","components/Form/FormSelectInput.js","components/Form/FormSocialSecurityInput.js","utils/states.js","components/Form/FormAddressInput.js","components/Form/FormIncomeInput.js","components/Form/FormSectionHeader.js","components/Form/FormUpperCaseText.js","components/Form/FormTitle.js","components/Form/index.js","utils/Validation/library.js","utils/Validation/AdminForm.js","pages/UserForm/AdminForm.js","pages/UserForm/index.js","utils/Validation/ApplicantForm.js","pages/ApplicantForm/index.js","components/Modal/index.js","pages/Users/SelectUserType.js","components/Table/index.js","components/Form/FormWithDefaults.js","utils/Validation/userFormDefaults.js","pages/Users/UserEditForm.js","pages/Users/UserTable.js","components/Table/Pagination.js","pages/Users/index.js","pages/Transactions/index.js","utils/Validation/TransactionForm.js","pages/TransactionForm/index.js","pages/MemberAccounts/AccountMask.js","pages/MemberAccounts/TransactionsTable.js","pages/MemberAccounts/AccountCard.js","pages/MemberAccounts/AccountsTable.js","pages/MemberAccounts/index.js","utils/Validation/SearchForm.js","pages/Members/SearchForm.js","utils/Validation/MemberForm.js","pages/Members/MemberEditForm.js","pages/Members/MembersTable.js","pages/Members/index.js","utils/StompContext.jsx","pages/Chat/ChatArea.js","pages/Chat/index.js","components/Sidebar/Navigation.js","utils/useWindowSize.jsx","components/QuickMenu/index.js","components/Sidebar/index.js","components/ProtectedRoute/index.js","App.jsx","index.jsx"],"names":["UserSessionContext","createContext","authorities","logoutMethod","loggedIn","token","expired","user","UpdateUserSessionContext","updateUser","userTokenInitialState","jwt","authority","UseUserSession","useContext","UserSessionProvider","children","STORAGE_NAME","process","useState","setToken","fetchTokenFromStorage","localStorage","fullToken","getItem","decodedJWT","jwt_decode","replace","isExpired","Date","now","exp","removeItem","isLoggedIn","includes","sub","e","checkedStorage","useEffect","Provider","value","actions","name","displayName","link","icon","forwardState","state","userType","Index","data","to","isRedirect","redirectStatus","setRedirectStatus","pathname","className","push","onClick","preventDefault","currentRecent","JSON","parse","unshift","length","setItem","stringify","size","RecentMenu","actionItems","setActionItems","dropdownRef","useRef","allActionsMenu","slice","type","ref","current","classList","toggle","id","map","action","index","QuickActionsBtn","ActionsMenu","onLinkClick","actionIndex","target","getAttribute","actionObject","actionsMenu","filter","rotation","Helmet","content","axiosCustom","axios","create","baseURL","interceptors","request","use","url","headers","error","Promise","reject","API","User","login","credentials","a","post","res","status","authorization","response","Error","userDetails","errorMsg","message","getUsers","pageable","get","params","console","getUserById","userId","Bank","searchMembers","search","updateMember","memberUpdate","put","getMemberByMembershipId","membershipId","Application","newApplicant","applicationRequest","Transaction","transaction","getTransactionByAccountId","accountId","pages","Accounts","getAccountsByMemberID","memberId","getAccountById","TextInput","label","onChange","placeholder","htmlFor","username","password","setUserDetails","visibility","msg","onError","setOnError","Redirect","onSuccess","setOnSuccess","onSubmit","xmlns","height","width","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","NotFound","FormTextInput","useFormContext","register","errors","formState","disabled","FormPhoneInput","inputValue","setInputValue","required","formattedNumber","phone","phoneNumber","phoneLength","formatPhoneNumber","FormEmailInput","FormCheckboxInput","autoComplete","FormSelectInput","options","defaultValue","opt","FormSocialSecurityInput","states","FormAddressInput","address","city","zipcode","addressState","setAddressState","mailingAddress","mailingCity","mailingState","mailingZipcode","mailingAddressState","setMailingAddressState","isSameAsMailing","setIsSameAsMailing","onChangePrimaryAddress","targetID","objName","charAt","toUpperCase","onChangeMailingAddress","FormIncomeInput","incomeVal","setIncomeVal","myVal","val","Number","decimal","substring","indexOf","log","toFixed","formatIncome","FormSectionHeader","FormUpperCaseText","FormTitle","validationSchema","methods","useForm","resolver","yupResolver","criteriaMode","mode","reValidateMode","handleSubmit","noValidate","question","minAgeDate","setFullYear","getFullYear","validations","applicationType","string","matches","err","email","firstName","middleName","nullable","transform","v","lastName","gender","dateOfBirth","date","typeError","max","sameAsBilling","undefined","when","is","then","otherwise","notRequired","driversLicense","socialSecurity","incomeFrequency","default","income","number","positive","min","initialDeposit","searchId","isNaN","searchName","searchAmount","transactionType","transactionMethod","amount","merchantCode","merchantName","accountNumber","transactionDescription","baseSchema","schema","yup","shape","AdminForm","MySwal","withReactContent","Swal","reqBody","role","fire","title","html","showConfirmButton","timer","Form","formType","setFormType","location","useLocation","dob","formattedDate","toISOString","mailing","intIncome","applicants","defaultValues","modalId","CustomFooter","DefaultFooter","tabIndex","SelectUserType","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","FormWithDefaults","useMemo","reset","UserEditForm","userData","loading","pulse","userFormDefaults","UserTable","modalDetails","setModalDetails","onEdit","Header","accessor","Cell","original","Table","Modal","Pagination","setPagination","isFirst","isLast","canPrevious","canNext","tablePagination","setTablePagination","first","last","totalPages","page","setPages","fetchUsers","useQuery","keepPreviousData","staleTime","isError","isLoading","method","description","newTransaction","AccountMask","mask","view","setView","values","changeView","TransactionsTable","fetchTransactions","AccountCard","account","toString","toLowerCase","balance","availableBalance","apy","AccountsTable","accountDetails","setAccountDetails","onView","cellVal","accounts","member","setMember","fetchAccounts","accountFloor","accountCeiling","SearchForm","MemberEditForm","memberData","update","window","reload","MembersTable","redirectDetails","setRedirectDetails","membership","applicant","onRedirect","queryClient","useQueryClient","mutate","useMutation","invalidateQueries","fetchMembers","StompContext","client","connect","StompContextProvider","stompClient","setStompClient","BROKER_URL","REACT_APP_BROKER_URL","onMessageReceived","myStompClient","stompConfig","brokerURL","debug","connectHeaders","onConnect","subscribe","Client","onStompError","activate","ChatArea","changeStatus","setUsername","setMessage","list","msgList","setMsgList","UseStompContext","userPage","createRef","chatPage","usernameForm","messageForm","messageInput","messageArea","connectingEl","payload","receivedMsg","body","tempMsgs","add","remove","style","color","backgroundColor","padding","sender","chatMessage","publish","destination","setStatus","circleRef","circleEl","Navigation","exact","activeClassName","display","nav","UseWindowSize","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","recentActions","setRecentActions","recentArr","AllActions","act","wrapperRef","windowSizes","OPEN_NAV_CLASS","footerRef","contentRef","wrapper","FOOTER_CLASS","contains","href","ProtectedRoute","Component","component","rest","setLoading","Sidebar","props","App","library","fab","faPlus","faChevronUp","faHome","faUserPlus","faUsers","faUsersCog","faEllipsisV","faPen","faSpinner","faEye","faEyeSlash","path","Login","Home","UserForm","Users","MemberAccounts","ApplicantForm","Members","TransactionForm","Transactions","Chat","QueryClient","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a84d929c.chunk.js","sourcesContent":["import React, {createContext, useContext, useEffect, useState} from 'react';\r\nimport jwt_decode from 'jwt-decode';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Context for User Session to be used throughout the application\r\n * @type {React.Context<{logoutMethod: logoutMethod, expired: boolean, loggedIn: boolean, authorities: {}, token: string}>}\r\n */\r\nexport const UserSessionContext = createContext({\r\n    authorities: {},\r\n    logoutMethod: () => {\r\n    },\r\n    loggedIn: false,\r\n    token: '',\r\n    expired: true,\r\n    user: ''\r\n})\r\n\r\n/** Context to hold method to update UserContext*/\r\nexport const UpdateUserSessionContext = createContext({\r\n    updateUser: () => {\r\n    }\r\n})\r\n\r\nconst userTokenInitialState = {\r\n    jwt: '',\r\n    authority: {},\r\n    loggedIn: false,\r\n    expired: true,\r\n    user: ''\r\n}\r\n\r\n/** Custom Hook to retrieve user details */\r\nexport function UseUserSession() {\r\n    const {authority, logoutMethod, loggedIn, token, expired, user} = useContext(UserSessionContext);\r\n    return {authority, logoutMethod, loggedIn, token, expired, user}\r\n}\r\n\r\n/** Custom Hook to access function that updates the user context from stored token */\r\nexport function UpdateUserSession() {\r\n    const {updateUser} = useContext(UpdateUserSessionContext);\r\n    return {updateUser}\r\n}\r\n\r\n/**\r\n * Provider that holds User details and authority to access and use the site. <br/>\r\n * Inside nested is the UpdateUserContextProvider that can be used to access the\r\n * updateUser method to update UserContext.\r\n *\r\n * @param children\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function UserSessionProvider({children}) {\r\n    const STORAGE_NAME = process.env.REACT_APP_TOKEN_NAME;\r\n    const [token, setToken] = useState(userTokenInitialState);\r\n\r\n    const fetchTokenFromStorage = () => {\r\n        if (STORAGE_NAME in localStorage) {\r\n            let fullToken = localStorage.getItem(STORAGE_NAME);\r\n            try {\r\n                const decodedJWT = jwt_decode(fullToken.replace('Bearer ', ''));\r\n                let isExpired = (Date.now() >= decodedJWT.exp * 1000);\r\n                if(isExpired) localStorage.removeItem(STORAGE_NAME)\r\n                let isLoggedIn = !isExpired && fullToken.includes('Bearer ') && decodedJWT.authority==='administrator';\r\n\r\n                setToken({\r\n                    jwt: fullToken,\r\n                    authority: decodedJWT.authority,\r\n                    expired: isExpired,\r\n                    loggedIn: isLoggedIn,\r\n                    user: decodedJWT.sub\r\n                })\r\n            } catch (e) {\r\n                setToken({...userTokenInitialState, checkedStorage: true});\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTokenFromStorage()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const logout = () => {\r\n        if (STORAGE_NAME in localStorage) localStorage.removeItem(STORAGE_NAME);\r\n        setToken(userTokenInitialState);\r\n    }\r\n\r\n    return (\r\n        <UserSessionContext.Provider\r\n            value={{\r\n                authorities: token.authority,\r\n                logoutMethod: logout,\r\n                loggedIn: token.loggedIn,\r\n                token: token.jwt,\r\n                expired: token.expired,\r\n                user: token.user\r\n            }}\r\n        >\r\n            <UpdateUserSessionContext.Provider\r\n                value={{updateUser: fetchTokenFromStorage}}\r\n            >\r\n                {children}\r\n            </UpdateUserSessionContext.Provider>\r\n        </UserSessionContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nUserSessionProvider.propTypes = {\r\n    children: PropTypes.element\r\n}\r\n","const actions = [\r\n    {\r\n        name: 'createAdmin',\r\n        displayName: 'Create Admin',\r\n        link: '/user/create',\r\n        icon: 'user-plus',\r\n        forwardState: true,\r\n        state: {\r\n            userType: 'admin'\r\n        }\r\n    },\r\n    {\r\n        name: 'viewMembers',\r\n        displayName: 'Members',\r\n        link: '/member',\r\n        icon: 'users',\r\n        forwardState: false\r\n    },\r\n    {\r\n        name: 'viewUsers',\r\n        displayName: 'Users',\r\n        link: '/user',\r\n        icon: 'users-cog',\r\n        forwardState: false\r\n    },\r\n    {\r\n        name: 'Create Applicant',\r\n        displayName: 'New Applicant',\r\n        link: '/member/create',\r\n        icon: 'user-plus',\r\n        forwardState: false\r\n    },\r\n    {\r\n        name: 'Transaction',\r\n        displayName: 'Post Transaction',\r\n        link: '/transaction/create',\r\n        icon: 'plus',\r\n        forwardState: false\r\n    }\r\n]\r\nexport default actions;\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst Index = ({data}) => {\r\n    const [redirectStatus, setRedirectStatus] = useState({\r\n        to: {},\r\n        isRedirect: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (data.forwardState) {\r\n            setRedirectStatus({\r\n                to: {\r\n                    pathname: data.link,\r\n                    state: {...data.state}\r\n                },\r\n                isRedirect: false\r\n            })\r\n        } else {\r\n            setRedirectStatus({\r\n                to: {\r\n                    pathname: data.link\r\n                },\r\n                isRedirect: false\r\n            })\r\n        }\r\n    }, [data])\r\n\r\n    const onActionClick = (e) => {\r\n        e.preventDefault();\r\n        const currentRecent = [];\r\n        if('RecentActions' in localStorage){\r\n            currentRecent.push(...JSON.parse(localStorage.getItem('RecentActions')))\r\n        }\r\n\r\n        currentRecent.unshift(data)\r\n        if(currentRecent.length>5) currentRecent.length=5\r\n        localStorage.setItem('RecentActions', JSON.stringify(currentRecent))\r\n\r\n\r\n        setRedirectStatus({...redirectStatus, isRedirect: true})\r\n    }\r\n\r\n    return (\r\n        <div className='col-12 col-md-2 action-card text-center text-center  '>\r\n            {\r\n                redirectStatus.isRedirect ?\r\n                    <Redirect push to={redirectStatus.to}/> :\r\n                    (\r\n                        <button className='btn btn-primary rounded-full text-white action-btn mx-auto' onClick={onActionClick}>\r\n                            <FontAwesomeIcon icon={data.icon} size='lg'/>\r\n                        </button>\r\n\r\n                    )\r\n            }\r\n            <div className='action-content text-center fs-5 '>\r\n                {data.displayName}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nIndex.propTypes = {\r\n    data: PropTypes.object\r\n};\r\n\r\nexport default Index;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport allActionsMenu from '../../utils/Actions.js';\r\nimport QuickActionsBtn from '../../components/QuickActionsBtn'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nconst RecentMenu = () => {\r\n    const [actionItems, setActionItems] = useState([])\r\n    const dropdownRef = useRef();\r\n\r\n    const onDowntownRotate = () => {\r\n        dropdownRef.current.classList.toggle('rotate-180')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ('RecentActions' in localStorage) {\r\n            setActionItems(JSON.parse(localStorage.getItem('RecentActions')))\r\n        } else {\r\n            setActionItems(allActionsMenu.slice(0,5))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=' p-4 container rounded-3'>\r\n            <div className='d-flex justify-content-between'>\r\n                <div>\r\n                    <h2 className='fs-3 fw-normal'>Recently Used</h2>\r\n                </div>\r\n                <button type='button' className='btn btn-primary rounded-circle rotate'\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#recentActionsMenu\"\r\n                        aria-expanded='false'\r\n                        aria-controls='recentActionsMenu'\r\n                        ref={dropdownRef}\r\n                        onClick={onDowntownRotate}\r\n                >\r\n                    <FontAwesomeIcon icon='chevron-up'/>\r\n                </button>\r\n            </div>\r\n            <div className='collapse show pt-2 mb-3' id='recentActionsMenu'>\r\n                <div className='row gap-4 gap-md-0 justify-content-between  action-container'>\r\n                    {actionItems.map((action, index) => {\r\n                        return <QuickActionsBtn data={action} key={index}/>\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nRecentMenu.propTypes = {};\r\n\r\nexport default RecentMenu;\r\n","import React, {useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport actionsMenu from '../../utils/Actions.js';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nconst ActionsMenu = () => {\r\n    const dropdownRef = useRef();\r\n\r\n    const onDowntownRotate = () => {\r\n        dropdownRef.current.classList.toggle('rotate-180')\r\n    }\r\n\r\n    const onLinkClick = (e) => {\r\n        const actionIndex = e.target.getAttribute('data-value')\r\n        const actionObject = actionsMenu[actionIndex]\r\n        const currentRecent = [];\r\n        if ('RecentActions' in localStorage) {\r\n            currentRecent.push(...JSON.parse(localStorage.getItem('RecentActions')))\r\n        }\r\n\r\n        const isInArr = currentRecent.filter(action => action.name === actionObject.name)\r\n\r\n        if (isInArr.length === 0) currentRecent.unshift(actionObject)\r\n\r\n        if (currentRecent.length > 5) currentRecent.length = 5\r\n        localStorage.setItem('RecentActions', JSON.stringify(currentRecent))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='p-4 container rounded-3'>\r\n            <div className='d-flex justify-content-between'>\r\n                <div>\r\n                    <h2 className='fs-3 fw-normal'>All Tasks</h2>\r\n                </div>\r\n                <button type='button' className='btn btn-primary rounded-circle rotate'\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#allActionsMenu\"\r\n                        aria-expanded='false'\r\n                        aria-controls='allActionsMenu'\r\n                        ref={dropdownRef}\r\n                        onClick={onDowntownRotate}\r\n                >\r\n                    <FontAwesomeIcon icon='chevron-up' rotation={180}/>\r\n                </button>\r\n            </div>\r\n\r\n            <div className='collapse pt-2' id='allActionsMenu'>\r\n                <div className='row'>\r\n                    {actionsMenu.map((action, index) => {\r\n                        return <Link\r\n                            className='col-12 col-md-6'\r\n                            key={index}\r\n                            data-value={index}\r\n                            to={{\r\n                                pathname: action.link,\r\n                                state: action?.state\r\n                            }}\r\n                            onClick={onLinkClick}\r\n                        >{action.displayName}</Link>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nActionsMenu.propTypes = {};\r\n\r\nexport default ActionsMenu;\r\n","import React from 'react';\r\nimport {UseUserSession} from '../../utils/UserContext';\r\nimport RecentMenu from './RecentMenu';\r\nimport ActionsMenu from './ActionsMenu';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst Index = () => {\r\n    const {user} = UseUserSession();\r\n    return (\r\n        <div data-testid='homepage' className='w-100'>\r\n            <Helmet>\r\n                <title>Dashboard | Aline Financial</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Dashboard for Aline Financial'\r\n                />\r\n            </Helmet>\r\n            <div className='w-75 mx-auto'>\r\n                <h1 className='fw-normal fs-2 mt-5 '>Welcome back {user}! </h1>\r\n                {/*<hr className='bg-dark'/>*/}\r\n                <div>\r\n                    <RecentMenu/>\r\n                    <hr className='bg-dark mt-2'/>\r\n                    <ActionsMenu/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Index;\r\n","import axios from 'axios';\r\nconst token = localStorage.getItem(process.env.REACT_APP_TOKEN_NAME)\r\n\r\n/**\r\n * Axios instance with baseURL and custom configurations\r\n */\r\nconst axiosCustom = axios.create({\r\n    baseURL: `${process.env.REACT_APP_API_BASEURL}`\r\n})\r\n\r\naxiosCustom.interceptors.request.use(\r\n    request => {\r\n        if(request.url.includes('api')) request.headers['Authorization'] = token;\r\n        return request;\r\n    },\r\n    error => {\r\n        return Promise.reject(error)\r\n    }\r\n);\r\n\r\nexport default axiosCustom;\r\n","import User from './UserAPI';\r\nimport Bank from './BankAPI'\r\nimport Application from './ApplicationAPI'\r\nimport Transaction from './TransactionsAPI'\r\nimport Accounts from './AccountsAPI'\r\n\r\nconst API = {\r\n    User,\r\n    Bank,\r\n    Application,\r\n    Transaction,\r\n    Accounts\r\n}\r\n\r\nexport default API;\r\n","import axios from '../axiosCustom';\r\n\r\nconst UserAPI =  {\r\n\r\n    /**\r\n     * User Login API:<br/>\r\n     * OnSuccess: Retrieves new JWT & stores in localstorage <br/>\r\n     * OnFail: Returns Error and message\r\n     * @param credentials\r\n     * @returns {Promise<response<any>|Error>}\r\n     */\r\n    login: async function(credentials)  {\r\n        try {\r\n            const res = await axios.post('/api/login', credentials);\r\n            if(res.status===200) localStorage.setItem(process.env.REACT_APP_TOKEN_NAME, res.headers.authorization)\r\n            return res;\r\n        }catch (e){\r\n            if (e.response.status === 403 ) return new Error('Invalid Credentials');\r\n            else return new Error('Oops! We\\'re checking what the problem is.')\r\n        }\r\n\r\n    },\r\n    create: async function (userDetails) {\r\n        try {\r\n            return await axios.post('/api/users/registration', userDetails)\r\n        } catch (e) {\r\n            const errorMsg = e?.response?.data[0] || e.message()\r\n            return new Error(errorMsg)\r\n        }\r\n    },\r\n    getUsers: async function (pageable) {\r\n        try{\r\n            return await axios.get('/api/users', {params: pageable})\r\n        }catch (e){\r\n            console.error(e.response)\r\n        }\r\n    },\r\n\r\n    getUserById: async function(userId) {\r\n        try{\r\n            return await axios.get(`/api/users/${userId}`)\r\n        }catch (e) {\r\n            console.error(e.response)\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserAPI;\r\n","import axios from '../axiosCustom'\r\n\r\nconst BankAPI = {\r\n    searchMembers: async function (search) {\r\n        try {\r\n            return await axios.get('/api/members', {params: {...search}});\r\n        } catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    },\r\n    updateMember: async function (memberUpdate) {\r\n        try {\r\n            return await axios.put('/api/members', memberUpdate)\r\n        } catch (e) {\r\n            console.error(e.response)\r\n        }\r\n    },\r\n    getMemberByMembershipId: async function(membershipId) {\r\n        try{\r\n            return await axios.get(`/api/members/${membershipId}`)\r\n        }catch (e) {\r\n            console.error(e.response)\r\n        }\r\n    }\r\n}\r\n\r\nexport default BankAPI;\r\n","import axios from '../axiosCustom'\r\n\r\nconst ApplicationAPI = {\r\n    newApplicant : async function(applicationRequest){\r\n        try {\r\n            return await axios.post('/api/applications', applicationRequest)\r\n        }catch (e) {\r\n            console.error(e.message())\r\n        }\r\n    }\r\n}\r\n\r\nexport default ApplicationAPI;\r\n","import axios from '../axiosCustom'\r\n\r\nconst TransactionsAPI = {\r\n    create: async function(transaction) {\r\n        try{\r\n            return await axios.post('/api/transactions', transaction);\r\n        }catch (e){\r\n            console.error(e.message)\r\n        }\r\n    },\r\n    getTransactionByAccountId: async function(accountId, pages){\r\n        try{\r\n            return await axios.get(`/api/accounts/${accountId}/transactions`, {params: {pages}});\r\n        }catch (e){\r\n            console.error(e.message)\r\n        }\r\n    }\r\n\r\n}\r\nexport default TransactionsAPI;\r\n","import axios from '../axiosCustom'\r\n\r\nconst AccountsAPI = {\r\n    getAccountsByMemberID: async function(memberId){\r\n        try {\r\n            return await axios.get(`/api/members/${memberId}/accounts`)\r\n        }catch (e) {\r\n            console.error(e.response)\r\n        }\r\n    },\r\n    getAccountById: async function(accountId){\r\n        try {\r\n            return await axios.get(`/api/accounts/${accountId}`)\r\n        }catch (e){\r\n            console.error(e.response)\r\n        }\r\n    }\r\n}\r\n\r\nexport default AccountsAPI;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * React Text Input component which has standard styling already applied.\r\n * Id is shared between the Label and Input to link them together.\r\n * label is displayed text which users can see.\r\n */\r\nconst TextInput = ({id, label, value, onChange, type})=> {\r\n    return (\r\n        <div className='form-floating'>\r\n            <input type={!type? 'text': type}\r\n                   name={id}\r\n                   className='form-control rounded-1'\r\n                   placeholder={label}\r\n                   id={id}\r\n                   value={value}\r\n                   onChange={onChange}\r\n                   data-testid={id}\r\n            />\r\n            <label htmlFor={id}>\r\n                {label}\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInput.propTypes = {\r\n    /** Required for screen readers */\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string,\r\n    /** Attributes for input field     */\r\n    inputProps: PropTypes.any,\r\n    /** State to sture and use input value     */\r\n    value: PropTypes.string\r\n}\r\n\r\n\r\nexport default TextInput;\r\n","import React, {useState} from 'react';\r\nimport API from '../../utils/API';\r\nimport {Redirect} from 'react-router-dom';\r\nimport TextInput from '../../components/TextInput';\r\nimport './login.css'\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst Index = () => {\r\n    const [userDetails, setUserDetails] = useState({username: '', password: ''})\r\n    const [onError, setOnError] = useState({visibility: 'hidden', msg: ''})\r\n    const [onSuccess, setOnSuccess] = useState({Redirect: null})\r\n\r\n\r\n    const onChange = (e) => {\r\n        setUserDetails({...userDetails, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault(); //prevents username & pwd to appear in url when submitting\r\n\r\n        if (userDetails.username === '' || userDetails.password === '') {\r\n            setOnError({visibility: '', msg: 'Please enter credentials.'})\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const res = await API.User.login(userDetails);\r\n            if (res.status === 200) setOnSuccess({Redirect: '/'})\r\n            else setOnError({visibility: '', msg: res.message})\r\n\r\n        } catch (error) {\r\n            setOnError({visibility: '', msg: 'Oops, there seems to be an error!'})\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=' login '>\r\n            <Helmet>\r\n                <title>Login | Aline Financial</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Login page for Aline Financial'\r\n                />\r\n            </Helmet>\r\n            {\r\n                onSuccess.Redirect ? <Redirect to={onSuccess.Redirect}/> :\r\n\r\n                    <div\r\n                        className='loginCard min-vh-100 d-flex justify-content-center align-items-center '>\r\n                        <div className='w-75 bg-white rounded-3 mx-auto p-3'>\r\n                            <h2 className='text-center pt-2'>Login</h2>\r\n                            <div className='text-center'>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\"  className='my-2' height='40' width='40' fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                                </svg>\r\n                            </div>\r\n                            <form className='text-center' onSubmit={onSubmit}>\r\n                                <div id='LoginError'\r\n                                     data-testid='loginError'\r\n                                     className={`text-danger py-1 ${onError.visibility}`}>{onError.msg}</div>\r\n\r\n                                <TextInput id='username' value={userDetails.username} onChange={onChange} label='Username' />\r\n\r\n                                <TextInput id='password' value={userDetails.password} onChange={onChange} label='Password' type='password'/>\r\n\r\n                                <input type='submit' value='Sign in' data-testid='loginSubmit' className='btn btn-primary mt-3'/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nIndex.propTypes = {};\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className='bg-body'>\r\n            <Helmet>\r\n                <title>Page Not Found</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Page not found'\r\n                />\r\n            </Helmet>\r\n            <h1 className='text-center mt-5'>Not Found</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nNotFound.propTypes = {\r\n\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useFormContext} from 'react-hook-form';\r\n\r\nconst FormTextInput = ({data}) => {\r\n    const {register, formState: {errors}} = useFormContext();\r\n\r\n    const {\r\n        id, label, type, disabled\r\n    } = data;\r\n\r\n    return (\r\n        <div>\r\n            <div className='form-floating mt-2 mb-0'>\r\n                <input\r\n                    id={id}\r\n                    name={id}\r\n                    type={type}\r\n                    className='form-control rounded-1'\r\n                    {...register(id)}\r\n                    placeholder={label}\r\n                    disabled={disabled}\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n            </div>\r\n            <p className='text-danger small mt-1 text-start'>{errors[id]?.message}</p>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFormTextInput.propTypes = {\r\n    question: PropTypes.object,\r\n    error: PropTypes.object\r\n};\r\n\r\nexport default FormTextInput;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useFormContext} from 'react-hook-form';\r\n\r\nconst FormPhoneInput = ({data}) => {\r\n    const {register, formState: {errors}} = useFormContext();\r\n    const {\r\n        id, label\r\n    } = data;\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const formatPhoneNumber = (phone) => {\r\n        if (!phone) return phone;\r\n\r\n        const phoneNumber = phone.replace(/[^\\d]/g, '')\r\n        const phoneLength = phoneNumber.length\r\n\r\n        if (phoneLength < 4) return phoneNumber;\r\n\r\n        if (phoneLength < 7) {\r\n            return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`\r\n        }\r\n\r\n        return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`\r\n    }\r\n\r\n    const handleInput = (e) => {\r\n        const formattedNumber = formatPhoneNumber(e.target.value);\r\n        setInputValue(formattedNumber)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='form-floating mt-2 mb-0'>\r\n                <input\r\n                    {...register(id, {required: true})}\r\n                    id={id}\r\n                    name={id}\r\n                    type='tel'\r\n                    className='form-control rounded-1'\r\n                    placeholder={label}\r\n                    onChange={handleInput}\r\n                    value={inputValue}\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n                <p className='text-danger small mt-1 text-start'>{errors[id]?.message}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nFormPhoneInput.propTypes = {\r\n    data: PropTypes.object,\r\n    formInputProp: PropTypes.any,\r\n    error: PropTypes.object\r\n};\r\n\r\nexport default FormPhoneInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useFormContext} from 'react-hook-form';\r\n\r\nconst FormEmailInput = ({ data}) => {\r\n\r\n    const {register, formState: {errors}} = useFormContext();\r\n    const {\r\n        id, label\r\n    } = data;\r\n\r\n    return (\r\n        <div>\r\n            <div className='form-floating mt-2 mb-0'>\r\n                <input\r\n                    id={id}\r\n                    name={id}\r\n                    type='email'\r\n                    {...register(id)}\r\n                    placeholder={label}\r\n                    className='form-control rounded-1 bg-white'\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n            </div>\r\n            <p className='text-danger small mt-1 text-start'>{errors[id]?.message}</p>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nFormEmailInput.propTypes = {\r\n    data: PropTypes.object,\r\n};\r\n\r\nexport default FormEmailInput;\r\n","import React from 'react';\r\nimport {useFormContext} from 'react-hook-form';\r\n\r\nconst FormCheckboxInput = ({data}) => {\r\n\r\n    const {register, formState: {errors}} = useFormContext();\r\n    const {\r\n        id, label\r\n    } = data\r\n    return (\r\n        <div>\r\n            <div className='mt-2 mb-0 '>\r\n                <input\r\n                    className='me-1 btn-check'\r\n                    id={id}\r\n                    name={id}\r\n                    type='checkbox'\r\n                    autoComplete='off'\r\n                    {...register(id)}\r\n                />\r\n                <label className='btn btn-outline-primary' htmlFor={id}>{label}</label>\r\n            </div>\r\n            <p className='text-danger small mt-1 text-start'>{errors[id]?.message}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nFormCheckboxInput.propTypes = {};\r\n\r\nexport default FormCheckboxInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useFormContext} from 'react-hook-form';\r\n\r\nconst FormSelectInput = ({data}) => {\r\n    const {register, formState: {errors}} = useFormContext();\r\n    const {\r\n        id, label, options, disabled\r\n    } = data\r\n    return (\r\n        <div className='form-floating'>\r\n            <select className='form-select' aria-label={id} defaultValue={options[0].value} {...register(id)} disabled={disabled}>\r\n                {\r\n                    options.map((opt, index) =>(\r\n                        <option key={index} value={opt.value}>{opt.name}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n            <label htmlFor={id}>{label}</label>\r\n\r\n            <p className='text-danger small mt-1 text-start'>{errors[id]?.message}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nFormSelectInput.propTypes = {\r\n    data: PropTypes.object\r\n};\r\n\r\nexport default FormSelectInput;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useFormContext} from 'react-hook-form';\r\n\r\nconst FormSocialSecurityInput = ({data}) => {\r\n    const {register, formState: {errors}} = useFormContext();\r\n    const {\r\n        id, label\r\n    } = data;\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const formatPhoneNumber = (phone) => {\r\n        if (!phone) return phone;\r\n\r\n        const phoneNumber = phone.replace(/[^\\d]/g, '')\r\n        const phoneLength = phoneNumber.length\r\n\r\n        if (phoneLength < 4) return phoneNumber;\r\n\r\n        if (phoneLength < 5) {\r\n            return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3)}`\r\n        }\r\n\r\n        return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3, 5)}-${phoneNumber.slice(5, 9)}`\r\n    }\r\n\r\n    const handleInput=(e)=>{\r\n        const formattedNumber = formatPhoneNumber(e.target.value);\r\n        setInputValue(formattedNumber);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='form-floating mt-2 mb-0'>\r\n                <input\r\n                    {...register(id, {required:true})}\r\n                    id={id}\r\n                    name={id}\r\n                    type='tel'\r\n                    className='form-control rounded-1'\r\n                    placeholder={label}\r\n                    onChange={handleInput}\r\n                    value={inputValue}\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n                <p className='text-danger small mt-1 text-start'>{errors[id]?.message}</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFormSocialSecurityInput.propTypes = {\r\n    data: PropTypes.object,\r\n    error: PropTypes.object\r\n};\r\n\r\nexport default FormSocialSecurityInput;\r\n","const states = [\r\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut',\r\n    'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas',\r\n    'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',\r\n    'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\r\n    'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon',\r\n    'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah',\r\n    'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\r\n];\r\n\r\nexport default states;\r\n","import React, {useState} from 'react';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport states from '../../utils/states';\r\n\r\nconst FormAddressInput = () => {\r\n    const {register, formState: {errors}} = useFormContext();\r\n\r\n    const [addressState, setAddressState] = useState({\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zipcode: ''\r\n    })\r\n\r\n    const [mailingAddressState, setMailingAddressState] = useState({\r\n        mailingAddress: '',\r\n        mailingCity: '',\r\n        mailingState: '',\r\n        mailingZipcode: ''\r\n    })\r\n\r\n    const [isSameAsMailing, setIsSameAsMailing] = useState(false)\r\n\r\n    const toggleIsSameAsMailing=()=>{\r\n        if(!isSameAsMailing){\r\n            setMailingAddressState({\r\n                mailingAddress: addressState.address,\r\n                mailingCity: addressState.city,\r\n                mailingState: addressState.state,\r\n                mailingZipcode: addressState.zipcode\r\n            })\r\n        }\r\n        setIsSameAsMailing(!isSameAsMailing)\r\n    }\r\n    const onChangePrimaryAddress =(e) =>{\r\n        const targetID = e.target.id\r\n\r\n        if(!isSameAsMailing) {\r\n            setAddressState({...addressState, [targetID]: e.target.value})\r\n        }\r\n        else {\r\n            setAddressState({...addressState, [targetID]: e.target.value})\r\n            const name = targetID.charAt(0).toUpperCase()+targetID.slice(1)\r\n            const objName = 'mailing'+name\r\n            setMailingAddressState({...mailingAddressState, [objName]:e.target.value})\r\n        }\r\n    }\r\n\r\n    const onChangeMailingAddress = (e) =>{\r\n        const targetID = e.target.id\r\n        setMailingAddressState({...mailingAddressState, [targetID]: e.target.value})\r\n    }\r\n\r\n    const mailingAddress = register('mailingAddress')\r\n    const mailingCity = register('mailingCity')\r\n    const mailingState = register('mailingState')\r\n    const mailingZipcode = register('mailingZipcode')\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n\r\n                <div className='form-floating mt-2 mb-0'>\r\n                    <input\r\n                        {...register('address')}\r\n                        id='address'\r\n                        name='address'\r\n                        type='text'\r\n                        className='form-control rounded-1'\r\n                        placeholder=\"Address\"\r\n                        value={addressState.address}\r\n                        onChange={onChangePrimaryAddress}\r\n                    />\r\n                    <label htmlFor='address'>Address</label>\r\n                </div>\r\n                <p className='text-danger small mt-1 text-start'>{errors?.address?.message}</p>\r\n            </div>\r\n            <div className='row align-items-center'>\r\n                <div className='col-md'>\r\n                    <div className='form-floating mt-2 mb-0'>\r\n                        <input\r\n                            id='city'\r\n                            name='city'\r\n                            type='text'\r\n                            className='form-control rounded-1'\r\n                            {...register('city')}\r\n                            placeholder=\"City\"\r\n                            value={addressState.city}\r\n                            onChange={onChangePrimaryAddress}\r\n                        />\r\n                        <label htmlFor='city'>City</label>\r\n                    </div>\r\n                    <p className='text-danger small mt-1 text-start'>{errors?.city?.message}</p>\r\n                </div>\r\n                <div className='col-md'>\r\n                    <div className='form-floating'>\r\n                        <select className='form-select '\r\n                                aria-label='state'\r\n                                name='state'\r\n                                id='state'{...register('state')}\r\n                                value={addressState.state}\r\n                                onChange={onChangePrimaryAddress}\r\n                        >\r\n                            <option>Select</option>\r\n                            {states.map(state => (\r\n                                <option value={state} key={state}>{state}</option>\r\n                            ))}\r\n                        </select>\r\n                        <label htmlFor='state'>State</label>\r\n                    </div>\r\n                    <p className='text-danger small mt-1 text-start'>{errors?.state?.message}</p>\r\n                </div>\r\n\r\n                <div className='col-md'>\r\n                    <div className='form-floating mt-2 mb-0'>\r\n                        <input\r\n                            id='zipcode'\r\n                            name='zipcode'\r\n                            type='number'\r\n                            className='form-control rounded-1'\r\n                            {...register('zipcode')}\r\n                            placeholder=\"Zipcode\"\r\n                            value={addressState.zipcode}\r\n                            onChange={onChangePrimaryAddress}\r\n                        />\r\n                        <label htmlFor='zipcode'>Zipcode</label>\r\n                    </div>\r\n                    <p className='text-danger small mt-1 text-start'>{errors?.zipcode?.message}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n                <div className='mt-2 mb-3 '>\r\n                    <input\r\n                        className='me-1 btn-check'\r\n                        id='isSameAsMailing'\r\n                        name='isSameAsMailing'\r\n                        type='checkbox'\r\n                        autoComplete='off'\r\n                        onClick={toggleIsSameAsMailing}\r\n                    />\r\n                    <label className='btn btn-outline-secondary' htmlFor='isSameAsMailing'>Same Mailing Address?</label>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <div className='form-floating mt-2 mb-0'>\r\n                        <input\r\n                            id='mailingAddress'\r\n                            name='mailingAddress'\r\n                            type='text'\r\n                            className='form-control rounded-1'\r\n                            placeholder=\"Mailing Address\"\r\n                            value={mailingAddressState.mailingAddress}\r\n                            {...mailingAddress}\r\n                            onChange={e=>{\r\n                                mailingAddress.onChange(e);\r\n                                onChangeMailingAddress(e);\r\n                            }}\r\n                            disabled={isSameAsMailing}\r\n                        />\r\n                        <label htmlFor='address'>Mailing Address</label>\r\n                    </div>\r\n                    <p className='text-danger small mt-1 text-start'>{errors?.mailingAddress?.message}</p>\r\n                </div>\r\n                <div className='row align-items-center'>\r\n                    <div className='col-md'>\r\n                        <div className='form-floating mt-2 mb-0'>\r\n                            <input\r\n                                id='mailingCity'\r\n                                name='mailingCity'\r\n                                type='text'\r\n                                className='form-control rounded-1'\r\n                                placeholder=\"Mailing City\"\r\n                                value={mailingAddressState.mailingCity}\r\n                                {...mailingCity}\r\n                                onChange={e=>{\r\n                                    mailingCity.onChange(e);\r\n                                    onChangeMailingAddress(e);\r\n                                }}\r\n                                disabled={isSameAsMailing}\r\n                            />\r\n                            <label htmlFor='mailingCity'>Mailing City</label>\r\n                        </div>\r\n                        <p className='text-danger small mt-1 text-start'>{errors?.mailingCity?.message}</p>\r\n                    </div>\r\n                    <div className='col-md'>\r\n                        <div className='form-floating'>\r\n                            <select className='form-select'\r\n                                    aria-label='mailingState'\r\n                                    name='mailingState'\r\n                                    id='mailingState'\r\n                                    value={mailingAddressState.mailingState}\r\n                                    {...mailingState}\r\n                                    onChange={e=>{\r\n                                        mailingState.onChange(e);\r\n                                        onChangeMailingAddress(e);\r\n                                    }}\r\n                                    disabled={isSameAsMailing}\r\n                            >\r\n                                <option>Select</option>\r\n                                {states.map(state => (\r\n                                    <option value={state} key={state}>{state}</option>\r\n                                ))}\r\n                            </select>\r\n                            <label htmlFor='mailingState'>Mailing State</label>\r\n                        </div>\r\n                        <p className='text-danger small mt-1 text-start'>{errors?.mailingState?.message}</p>\r\n                    </div>\r\n\r\n                    <div className='col-md'>\r\n                        <div className='form-floating mt-2 mb-0'>\r\n                            <input\r\n                                id='mailingZipcode'\r\n                                name='mailingZipcode'\r\n                                type='number'\r\n                                className='form-control rounded-1'\r\n                                placeholder=\"Mailing Zipcode\"\r\n                                value={mailingAddressState.mailingZipcode}\r\n                                {...mailingZipcode}\r\n                                onChange={e=>{\r\n                                    mailingZipcode.onChange(e);\r\n                                    onChangeMailingAddress(e);\r\n                                }}\r\n                                disabled={isSameAsMailing}\r\n                            />\r\n                            <label htmlFor='zipcode'>Mailing Zipcode</label>\r\n                        </div>\r\n                        <p className='text-danger small mt-1 text-start'>{errors?.mailingZipcode?.message}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nFormAddressInput.propTypes = {};\r\n\r\nexport default FormAddressInput;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useFormContext} from 'react-hook-form';\r\n\r\nconst FormIncomeInput = ({data}) => {\r\n    const {register} = useFormContext();\r\n    const [incomeVal, setIncomeVal] = useState(0);\r\n\r\n    const {\r\n        id, label\r\n    } = data;\r\n\r\n    const formatIncome = (val) =>{\r\n        if(!val.includes('.')){\r\n            return Number(val);\r\n        }\r\n\r\n        const decimal = val.substring(val.indexOf('.')+1)\r\n        console.log(decimal)\r\n        if(val.includes('.') && decimal.length===1 ){\r\n            return Number(val).toFixed(2)\r\n        }\r\n\r\n        if(val.includes('.') && decimal.length>1){\r\n            return Number(val).toFixed(2)\r\n        }\r\n    }\r\n\r\n    const handleInput= (e)=>{\r\n        const value = e.target.value\r\n        const myVal =  formatIncome(value)\r\n\r\n        setIncomeVal(myVal)\r\n    }\r\n\r\n    return (\r\n        <div className='input-group w-100'>\r\n            <span className='input-group-text mt-2'>$</span>\r\n            <div className='form-floating mt-2 mb-0 flex-grow-1 '>\r\n                <input\r\n                    id={id}\r\n                    name={id}\r\n                    type='number'\r\n                    className='form-control rounded-1'\r\n                    {...register(id)}\r\n                    placeholder={label}\r\n                    onChange={handleInput}\r\n                    value={incomeVal}\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFormIncomeInput.propTypes = {\r\n    question: PropTypes.object,\r\n    error: PropTypes.object\r\n};\r\n\r\nexport default FormIncomeInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormSectionHeader = ({data}) => {\r\n    return (\r\n        <h3 className='text-md-start my-4 text-decoration-underline'>\r\n            {data.label}\r\n        </h3>\r\n    );\r\n};\r\n\r\nFormSectionHeader.propTypes = {\r\n    data: PropTypes.object\r\n};\r\n\r\nexport default FormSectionHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useFormContext} from 'react-hook-form';\r\n\r\nconst FormUpperCaseText = ({data}) => {\r\n    const {register, formState: {errors}} = useFormContext();\r\n\r\n    const {\r\n        id, label, type,\r\n    } = data;\r\n\r\n    return (\r\n        <div>\r\n            <div className='form-floating mt-2 mb-0'\r\n            >\r\n                <input\r\n                    id={id}\r\n                    name={id}\r\n                    type={type}\r\n                    className='form-control rounded-1 text-uppercase'\r\n                    {...register(id)}\r\n                    placeholder={label}\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n            </div>\r\n            <p className='text-danger small mt-1 text-start'>{errors[id]?.message}</p>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFormUpperCaseText.propTypes = {\r\n    question: PropTypes.object,\r\n    error: PropTypes.object\r\n};\r\n\r\nexport default FormUpperCaseText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormTitle = ({data}) => {\r\n    const {label} = data\r\n    return (\r\n        <div>\r\n            <h1 className='display-5 '>{label}</h1>\r\n            <hr className = 'mb-5'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nFormTitle.propTypes = {\r\n    data: PropTypes.object\r\n};\r\n\r\nexport default FormTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormProvider, useForm} from 'react-hook-form';\r\nimport FormTextInput from './FormTextInput';\r\nimport FormPhoneInput from './FormPhoneInput';\r\nimport FormEmailInput from './FormEmailInput';\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport FormCheckboxInput from './FormCheckboxInput';\r\nimport FormSelectInput from './FormSelectInput';\r\nimport FormSocialSecurityInput from './FormSocialSecurityInput';\r\nimport FormAddressInput from './FormAddressInput';\r\nimport FormIncomeInput from './FormIncomeInput';\r\nimport FormSectionHeader from './FormSectionHeader';\r\nimport FormUpperCaseText from './FormUpperCaseText';\r\nimport FormTitle from './FormTitle';\r\n\r\nconst Index = ({data, onSubmit, validationSchema, children}) => {\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        criteriaMode: 'all',\r\n        mode: 'all',\r\n        reValidateMode: 'onChange',\r\n    })\r\n\r\n    return (\r\n        <FormProvider {...methods} >\r\n            <form onSubmit={methods.handleSubmit(onSubmit)} className='text-center bg-white mt-3 mb-5 rounded-3 shadow p-3'\r\n                  noValidate>\r\n                {data.map((question, index) => {\r\n                    switch (question.type) {\r\n                        case 'date':\r\n                        case 'number':\r\n                        case 'password':\r\n                        case 'text':\r\n                            return <FormTextInput data={question} key={question.id}/>\r\n                        case 'phone':\r\n                            return <FormPhoneInput data={question} key={question.id}/>\r\n                        case 'email':\r\n                            return <FormEmailInput data={question} key={question.id}/>\r\n                        case 'checkbox':\r\n                            return <FormCheckboxInput data={question} key={question.id}/>\r\n                        case 'select':\r\n                            return <FormSelectInput data={question} key={question.id}/>\r\n                        case 'ssn':\r\n                            return <FormSocialSecurityInput data={question} key={question.id}/>\r\n                        case 'addressWithMailingOption':\r\n                            return <FormAddressInput data={question} key={index}/>\r\n                        case 'income':\r\n                            return <FormIncomeInput data={question} key={question.id}/>\r\n                        case 'sectionHeader':\r\n                            return <FormSectionHeader data={question} key={index}/>\r\n                        case 'UppercaseText':\r\n                            return <FormUpperCaseText data={question} key={question.id}/>\r\n                        case 'title':\r\n                            return <FormTitle data={question} key={question.id}/>\r\n                        default:\r\n                            return <div key={index}>Need to create type for Form component</div>\r\n                    }\r\n                })}\r\n                {children}\r\n                {<input type='submit' className='btn btn-primary '/>}\r\n            </form>\r\n        </FormProvider>\r\n\r\n    );\r\n};\r\n\r\nIndex.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    validationSchema: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Index;\r\n","import {date, number, string} from 'yup';\r\n\r\nconst minAgeDate = new Date();\r\nminAgeDate.setFullYear(minAgeDate.getFullYear() - 17);\r\n\r\nconst validations = {\r\n    applicationType: string()\r\n        .label('Application Type')\r\n        .required('Application type is required')\r\n        .matches(/(CHECKING|SAVINGS|CHECKING_AND_SAVINGS|CREDIT_CARD|LOAN)/, (err) => `'${err.value}' is not valid application type.`),\r\n\r\n    email: string()\r\n        .label('Email')\r\n        .required()\r\n        .email((err) => `'${err.value}' is not a valid email address.`),\r\n\r\n    firstName: string()\r\n        .label('First Name')\r\n        .required()\r\n        .matches(/^[aA-zZ\\s-]+$/, (err) => `'${err.value}' is not a valid name.`),\r\n\r\n    middleName: string()\r\n        .label('Middle Name')\r\n        .matches(/^[aA-zZ\\s-]+$/, (err) => `'${err.value}' is not a valid middle name.`)\r\n        .nullable(true)\r\n        .transform(v=>(v===''? null: v)),\r\n\r\n    lastName: string()\r\n        .label('Last Name')\r\n        .required()\r\n        .matches(/^[aA-zZ\\s-]+$/, (err) => `'${err.value}' is not a valid name.`),\r\n\r\n    gender: string()\r\n        .label('Gender')\r\n        .required('Please select a gender.')\r\n        .matches(/(MALE|FEMALE|OTHER|UNSPECIFIED)/, 'Please select a gender.'),\r\n\r\n    dateOfBirth: date()\r\n        .label('Date of Birth')\r\n        .typeError('Not a valid date.')\r\n        .transform((val) => new Date(val))\r\n        .required('Date of birth is required.')\r\n        .max(minAgeDate, 'Must be at least 18 years of age.'),\r\n\r\n    phone: string()\r\n        .label('Phone Number')\r\n        .required()\r\n        .matches(/\\(\\d{3}\\)[\\s-.]\\d{3}[\\s-.]\\d{4}/,\r\n            (err) => `'${err.value}' is not a valid phone number.`),\r\n\r\n    address: string()\r\n        .label('Address')\r\n        .required('Address is required.')\r\n        .matches(/^([0-9]+([a-zA-Z]+)?)\\s(.*)(\\s)([a-zA-Z]+)(\\.)?(\\s(#?(\\w+))|([A-Za-z]+\\.?(\\w+)))?$/i,\r\n            (err) => `'${err.value}' is not a valid address.`),\r\n\r\n    city: string()\r\n        .label('City')\r\n        .required('City is required.'),\r\n\r\n    state: string()\r\n        .label('State')\r\n        .required('State is required.'),\r\n\r\n    zipcode: string()\r\n        .label('Zipcode')\r\n        .required('Zipcode is required.')\r\n        .matches(/^\\d{5}(-\\d{4})?$/,\r\n            (err) => `'${err.value}' is not a valid zipcode.`),\r\n\r\n    sameAsBilling: string()\r\n        .matches(/(true|false)/i)\r\n        .required('Please select an option.'),\r\n\r\n    mailingAddress: string()\r\n        .label('Mailing Address')\r\n        .transform((value) => (value.length <= 0 ? undefined : value))\r\n        .when('sameAsBilling', {\r\n            is: 'false',\r\n            then: string()\r\n                .matches(/^(((PO|P O|P.O)\\.?\\s(Box)\\s([0-9]+))|(([0-9]+([a-zA-Z]+)?)\\s(.*)(\\s)([a-zA-Z]+)(\\.)?(\\s(#?(\\w+))|([A-Za-z]+\\.?(\\w+)))?))$/i,\r\n                    (err) => `'${err.value}' is not a valid address.`).required('Address is required.'),\r\n            otherwise: string().notRequired()\r\n        }),\r\n\r\n    mailingCity: string()\r\n        .label('Mailing City')\r\n        .transform((value) => (value.length <= 0 ? undefined : value))\r\n        .when('sameAsBilling', {\r\n            is: 'false',\r\n            then: string().required('City is required.')\r\n        }),\r\n\r\n    mailingState: string()\r\n        .label('Mailing State')\r\n        .transform((value) => (value.length <= 0 ? undefined : value))\r\n        .when('sameAsBilling', {\r\n            is: 'false',\r\n            then: string().required('State is required.')\r\n        }),\r\n\r\n    mailingZipcode: string()\r\n        .label('Mailing Zipcode')\r\n        .transform((value) => (value.length <= 0 ? undefined : value))\r\n        .matches(/^\\d{5}(-\\d{4})?$/,\r\n            (err) => `${err.value} is not a valid zipcode.`)\r\n        .when('sameAsBilling', {\r\n            is: 'false',\r\n            then: string().required('Zipcode is required.')\r\n        }),\r\n\r\n    driversLicense: string()\r\n        .label('Driver\\'s License')\r\n        .required(),\r\n\r\n    socialSecurity: string()\r\n        .label('Social Security')\r\n        .required()\r\n        .matches(/(\\d{3})-(\\d{2})-(\\d{4})/, (err) => `${err.value} is not a valid social security number.`),\r\n\r\n    incomeFrequency: string()\r\n        .label('Income Frequency')\r\n        .required()\r\n        .default('Annually')\r\n        .matches(/(Annually|Monthly|Bi-Weekly|Weekly|Hourly)/i),\r\n\r\n    income: number()\r\n        .label('Income')\r\n        .typeError('Income must be number')\r\n        .positive('Cannot have negative income.')\r\n        .min(.01, 'Income must be greater than $0.01')\r\n        .required('Income is required.'),\r\n\r\n    initialDeposit: number()\r\n        .positive('Cannot have a negative deposit.')\r\n        .label('Initial Deposit')\r\n        .required('An initial deposit is required.'),\r\n\r\n    username: string()\r\n        .label('Username')\r\n        .required(),\r\n\r\n    password: string()\r\n        .label('Password')\r\n        .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, 'Invalid password')\r\n        .required(),\r\n\r\n    searchId: number()\r\n        .label('Searchable Id')\r\n        .transform((value) => (isNaN(value) ? null : value))\r\n        .nullable(true),\r\n\r\n    searchName: string()\r\n        .label('Searchable name')\r\n        .nullable(true)\r\n        .transform(v=>(v===''? null: v)),\r\n\r\n    searchAmount: number()\r\n        .label('Search Amount')\r\n        .typeError('Search amount must be a number')\r\n        .transform((value) => (isNaN(value) ? null : value))\r\n        .nullable(),\r\n\r\n    transactionType: string()\r\n        .label('Transaction Type')\r\n        .required(),\r\n\r\n    transactionMethod: string()\r\n        .label('Transaction Method')\r\n        .required(),\r\n\r\n    amount: number()\r\n        .label('Amount')\r\n        .typeError('Amount must be a number')\r\n        .required(),\r\n\r\n    merchantCode: string()\r\n        .label('Merchant Code')\r\n        .min(4, 'Merchant Code must be at least 4 characters in length')\r\n        .max(8, 'Merchant Code cannot be greater than 8 characters in length')\r\n        .required(),\r\n\r\n    merchantName: string()\r\n        .label('Merchant Name')\r\n        .required(),\r\n\r\n    accountNumber: string()\r\n        .label('Account Number')\r\n        .required(),\r\n\r\n    transactionDescription: string()\r\n        .label('Transaction Description')\r\n        .nullable(true)\r\n\r\n}\r\n\r\nexport default validations;\r\n","import * as yup from 'yup';\r\nimport baseSchema from './library'\r\n\r\nconst {\r\n    firstName,\r\n    lastName,\r\n    phone,\r\n    email,\r\n    username,\r\n    password\r\n} = baseSchema\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: firstName,\r\n    lastName: lastName,\r\n    phone: phone,\r\n    email: email,\r\n    username: username,\r\n    password: password\r\n})\r\n\r\nexport default schema;\r\n","import React from 'react';\r\nimport Form from '../../components/Form'\r\nimport schema from '../../utils/Validation/AdminForm'\r\nimport API from '../../utils/API';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AdminForm = () => {\r\n    const MySwal = withReactContent(Swal);\r\n\r\n    const onSubmit = async (data) => {\r\n        const reqBody = {...data, role: 'admin'}\r\n\r\n        try {\r\n            const res = await API.User.create(reqBody)\r\n            if(res.status===201){\r\n                await MySwal.fire({\r\n                    title: <strong>Success</strong>,\r\n                    html: <p>Admin user created</p>,\r\n                    icon: 'success',\r\n                })\r\n            }else {\r\n                await MySwal.fire({\r\n                    title: <strong>Oops!</strong>,\r\n                    html: <p>{res.message || 'We\\'re checking out what went wrong' }</p>,\r\n                    icon: 'error',\r\n                })\r\n            }\r\n        }catch (e){\r\n            await MySwal.fire({\r\n                title: <strong>Oops!</strong>,\r\n                html: <p>Please check your network</p>,\r\n                icon: 'error',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        }\r\n    }\r\n\r\n    const data = [\r\n        {\r\n            id: 'firstName',\r\n            type: 'text',\r\n            label: 'First Name'\r\n        },\r\n        {\r\n            id: 'lastName',\r\n            type: 'text',\r\n            label: 'Last name'\r\n        },\r\n        {\r\n            id: 'username',\r\n            type: 'text',\r\n            label: 'Username'\r\n        },\r\n        {\r\n            id: 'password',\r\n            type: 'password',\r\n            label: 'Password'\r\n        },\r\n        {\r\n            id: 'phone',\r\n            type: 'phone',\r\n            label: 'Phone'\r\n        },\r\n        {\r\n            id: 'email',\r\n            type: 'email',\r\n            label: 'Email'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='display-5 mb-3 mt-5'>Create an Admin</h1>\r\n            <hr className = 'mb-5'/>\r\n            <Form data={data} onSubmit={onSubmit} validationSchema={schema}/>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminForm;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport AdminForm from './AdminForm';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst Index = () => {\r\n    const [formType, setFormType] = useState()\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if(location?.state?.userType) {\r\n            switch (location.state.userType) {\r\n                case 'admin':\r\n                    setFormType(<AdminForm/>)\r\n                    break;\r\n                case 'employee':\r\n                    break;\r\n                case 'member':\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        else{\r\n            setFormType(<div className='display-4 mt-4'>Unable to create user please go to the Users page</div>)\r\n        }\r\n\r\n    }, [location])\r\n\r\n    return (\r\n        <div className='w-75 mx-auto'>\r\n            <Helmet>\r\n                <title>Add User</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Create user'\r\n                />\r\n            </Helmet>\r\n            {formType}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","import * as yup from 'yup';\r\nimport baseSchema from './library'\r\n\r\nconst {\r\n    firstName,\r\n    middleName,\r\n    lastName,\r\n    dateOfBirth,\r\n    gender,\r\n    email,\r\n    phone,\r\n    socialSecurity,\r\n    driversLicense,\r\n    income,\r\n    address,\r\n    city,\r\n    state,\r\n    zipcode,\r\n    mailingAddress,\r\n    mailingCity,\r\n    mailingState,\r\n    mailingZipcode\r\n} = baseSchema\r\n\r\n\r\nconst schema = yup.object().shape({\r\n\r\n    firstName: firstName,\r\n    middleName: middleName,\r\n    lastName: lastName,\r\n    dateOfBirth: dateOfBirth,\r\n    gender: gender,\r\n    email: email,\r\n    phone: phone,\r\n    socialSecurity: socialSecurity,\r\n    driversLicense: driversLicense,\r\n    income: income,\r\n    address: address,\r\n    city: city,\r\n    state: state,\r\n    zipcode: zipcode,\r\n    mailingAddress: mailingAddress,\r\n    mailingCity: mailingCity,\r\n    mailingState: mailingState,\r\n    mailingZipcode: mailingZipcode\r\n\r\n})\r\n\r\nexport default schema;\r\n","import React from 'react';\r\nimport Form from '../../components/Form'\r\nimport schema from '../../utils/Validation/ApplicantForm'\r\nimport API from '../../utils/API';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst Index = () => {\r\n    const MySwal = withReactContent(Swal);\r\n\r\n    const onSubmit = async (data) => {\r\n        const dob = data.dateOfBirth\r\n        const formattedDate = dob.toISOString().slice(0, 10)\r\n        const mailing = {\r\n            mailingAddress: data.mailingAddress === '' ? data.address : data.mailingAddress,\r\n            mailingCity: data.mailingCity ?? data.city,\r\n            mailingState: data.mailingState === 'Select' ? data.state : data.mailingState,\r\n            mailingZipcode: data.mailingZipcode ?? data.zipcode,\r\n        }\r\n        const intIncome = data.income * 100;\r\n\r\n        const applicationRequest = {\r\n            applicationType: data.applicationType,\r\n            applicants: [{\r\n                ...data,\r\n                income: intIncome,\r\n                dateOfBirth: formattedDate,\r\n                ...mailing\r\n            }]\r\n        }\r\n        delete applicationRequest.applicants[0]?.applicationType;\r\n        try {\r\n\r\n            console.log('applicant Request: ', applicationRequest)\r\n            const res = await API.Application.newApplicant(applicationRequest)\r\n            if (res.status === 201) {\r\n                await MySwal.fire({\r\n                    title: <strong>Success</strong>,\r\n                    html: <p>Applicant approved</p>,\r\n                    icon: 'success',\r\n                })\r\n            } else {\r\n                await MySwal.fire({\r\n                    title: <strong>Denied</strong>,\r\n                    html: <p>{res.message || 'We\\'re checking out what went wrong'}</p>,\r\n                    icon: 'error',\r\n                })\r\n            }\r\n\r\n        } catch (e) {\r\n            await MySwal.fire({\r\n                title: <strong>Oops!</strong>,\r\n                html: <p>Please check your network</p>,\r\n                icon: 'error',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const form = [\r\n        {\r\n            id: 'ApplicantForm',\r\n            type: 'title',\r\n            label: 'Applicant Form'\r\n        },\r\n        {\r\n            id: 'applicationType',\r\n            type: 'select',\r\n            label: 'Application Type',\r\n            options: [\r\n                {value: 'CHECKING_AND_SAVINGS', name: 'Checking & Savings'},\r\n                {value: 'CHECKING', name: 'Checking'},\r\n                {value: 'SAVINGS', name: 'Savings'}\r\n            ]\r\n        },\r\n        {\r\n            id: 'personalSection',\r\n            type: 'sectionHeader',\r\n            label: 'Personal Information'\r\n        },\r\n        {\r\n            id: 'firstName',\r\n            type: 'text',\r\n            label: 'First Name'\r\n        },\r\n        {\r\n            id: 'middleName',\r\n            type: 'text',\r\n            label: 'Middle Name'\r\n        },\r\n        {\r\n            id: 'lastName',\r\n            type: 'text',\r\n            label: 'Last name'\r\n        },\r\n        {\r\n            id: 'dateOfBirth',\r\n            type: 'date',\r\n            label: 'DOB'\r\n        },\r\n        {\r\n            id: 'gender',\r\n            type: 'select',\r\n            label: 'Gender',\r\n            options: [\r\n                {value: 'OTHER', name: 'Other'},\r\n                {value: 'FEMALE', name: 'Female'},\r\n                {value: 'MALE', name: 'Male'}\r\n            ]\r\n        },\r\n        {\r\n            id: 'socialSecurity',\r\n            type: 'ssn',\r\n            label: 'Social Security Number'\r\n        },\r\n        {\r\n            id: 'driversLicense',\r\n            type: 'text',\r\n            label: 'Drivers License'\r\n        },\r\n        {\r\n            id: 'income',\r\n            type: 'income',\r\n            label: 'Annual Income'\r\n        },\r\n        {\r\n            id: 'contactSection',\r\n            type: 'sectionHeader',\r\n            label: 'Contact Information'\r\n        },\r\n        {\r\n            id: 'email',\r\n            type: 'email',\r\n            label: 'Email'\r\n        },\r\n        {\r\n            id: 'phone',\r\n            type: 'phone',\r\n            label: 'Phone'\r\n        },\r\n        {\r\n            id: 'addressSection',\r\n            type: 'sectionHeader',\r\n            label: 'Address'\r\n        },\r\n        {\r\n            id: 'address',\r\n            type: 'addressWithMailingOption',\r\n            label: 'Address'\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className='w-75 mx-auto pb-5 p-3 '>\r\n            <Helmet>\r\n                <title>New Applicant</title>\r\n                <meta\r\n                    name='description'\r\n                    content='New applicant form for Aline Financial'\r\n                />\r\n            </Helmet>\r\n            <Form onSubmit={onSubmit} data={form} validationSchema={schema} defaultValues={{}}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nIndex.propTypes = {};\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Index = ({modalId, title, children, CustomFooter}) => {\r\n    const DefaultFooter = () => {\r\n        return <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n    }\r\n\r\n    return (\r\n        <div className='modal fade' id={modalId} data-bs-backdrop='static' data-bs-keyboard=\"false\" tabIndex=\"-1\"\r\n             aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"modal-title\">{title}</h5>\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"/>\r\n                    </div>\r\n                    <div className=\"modal-body text-center\">\r\n                        {children}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        {CustomFooter? <CustomFooter/> : <DefaultFooter/>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nIndex.propTypes = {\r\n    modalId: PropTypes.string,\r\n    title: PropTypes.string,\r\n    children: PropTypes.any\r\n};\r\n\r\nexport default Index;\r\n","import React, {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const SelectUserType = () => {\r\n    const [redirectStatus, setRedirectStatus] = useState({\r\n        to: [],\r\n        isRedirect: false\r\n    })\r\n\r\n    const onClick = (e) => {\r\n        setRedirectStatus({\r\n            to: {\r\n                pathname: '/user/create',\r\n                state: {userType: e.target.value}\r\n            },\r\n            isRedirect: true\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !redirectStatus.isRedirect ? (\r\n                        <div>\r\n                            <button className='btn-primary btn' type='button' value='admin' data-bs-dismiss='modal'\r\n                                    onClick={onClick}>Admin\r\n                            </button>\r\n                            <button className='btn-primary btn mx-2 my-2 my-md-0' type='button' data-bs-dismiss='modal'\r\n                                    value='employee' onClick={onClick}>Employee\r\n                            </button>\r\n                            <button className='btn-primary btn' type='button' value='member' data-bs-dismiss='modal'\r\n                                    onClick={onClick}>Member\r\n                            </button>\r\n                        </div>\r\n                    ) :\r\n                    <Redirect push to={redirectStatus.to}/>\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {useTable} from 'react-table'\r\n\r\nconst Index = ({columns, data}) => {\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = useTable({\r\n            columns,\r\n            data\r\n    })\r\n\r\n    return (\r\n        <table className='table table-striped table-hover' {...getTableProps()}>\r\n            <thead className='table-dark'>\r\n            {\r\n                headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                        ))}\r\n                    </tr>\r\n                ))\r\n            }\r\n            </thead>\r\n\r\n            <tbody {...getTableBodyProps()}>\r\n            {\r\n                rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {\r\n                                row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n            </tbody>\r\n\r\n        </table>\r\n    );\r\n};\r\n\r\n\r\nexport default Index;\r\n","import React, {useMemo} from 'react';\r\nimport {FormProvider, useForm} from 'react-hook-form';\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport FormTextInput from './FormTextInput';\r\nimport FormPhoneInput from './FormPhoneInput';\r\nimport FormEmailInput from './FormEmailInput';\r\nimport FormCheckboxInput from './FormCheckboxInput';\r\nimport FormSelectInput from './FormSelectInput';\r\nimport FormSocialSecurityInput from './FormSocialSecurityInput';\r\nimport FormAddressInput from './FormAddressInput';\r\nimport FormIncomeInput from './FormIncomeInput';\r\nimport FormSectionHeader from './FormSectionHeader';\r\nimport FormUpperCaseText from './FormUpperCaseText';\r\nimport FormTitle from './FormTitle';\r\n\r\nconst FormWithDefaults = ({data, onSubmit, validationSchema, children, defaultValues}) => {\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        criteriaMode: 'all',\r\n        mode: 'all',\r\n        reValidateMode: 'onChange',\r\n        defaultValues: useMemo(()=>(defaultValues), [defaultValues])\r\n    })\r\n    return (\r\n        <FormProvider {...methods} >\r\n            <form onSubmit={methods.handleSubmit(onSubmit)} className='text-center mt-3 mb-5 rounded-3 p-3'\r\n                  noValidate>\r\n                {data.map((question, index) => {\r\n                    switch (question.type) {\r\n                        case 'date':\r\n                        case 'number':\r\n                        case 'password':\r\n                        case 'text':\r\n                            return <FormTextInput data={question} key={question.id}/>\r\n                        case 'phone':\r\n                            return <FormPhoneInput data={question} key={question.id}/>\r\n                        case 'email':\r\n                            return <FormEmailInput data={question} key={question.id}/>\r\n                        case 'checkbox':\r\n                            return <FormCheckboxInput data={question} key={question.id}/>\r\n                        case 'select':\r\n                            return <FormSelectInput data={question} key={question.id}/>\r\n                        case 'ssn':\r\n                            return <FormSocialSecurityInput data={question} key={question.id}/>\r\n                        case 'addressWithMailingOption':\r\n                            return <FormAddressInput data={question} key={index}/>\r\n                        case 'income':\r\n                            return <FormIncomeInput data={question} key={question.id}/>\r\n                        case 'sectionHeader':\r\n                            return <FormSectionHeader data={question} key={index}/>\r\n                        case 'UppercaseText':\r\n                            return <FormUpperCaseText data={question} key={question.id}/>\r\n                        case 'title':\r\n                            return <FormTitle data={question} key={question.id}/>\r\n                        default:\r\n                            return <div key={index}>Need to create type for Form component</div>\r\n                    }\r\n                })}\r\n                {children}\r\n                <div className='d-flex justify-content-evenly pt-3'>\r\n                    <input type='submit' className='btn btn-primary text-white'/>\r\n                    <button type='button' className='btn btn-primary text-white' onClick={()=>{methods.reset()}}>Reset</button>\r\n                </div>\r\n            </form>\r\n        </FormProvider>\r\n    );\r\n};\r\n\r\nFormWithDefaults.propTypes = {\r\n\r\n};\r\n\r\nexport default FormWithDefaults;\r\n","import * as yup from 'yup';\r\nimport baseSchema from './library'\r\n\r\nconst {\r\n    firstName,\r\n    lastName,\r\n    phone,\r\n    email,\r\n    username\r\n} = baseSchema\r\n\r\nconst schema = yup.object().shape({\r\n    firstName,\r\n    lastName,\r\n    phone,\r\n    email,\r\n    username\r\n})\r\n\r\nexport default schema;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FormWithDefaults from '../../components/Form/FormWithDefaults';\r\nimport userFormDefaults from '../../utils/Validation/userFormDefaults';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nconst UserEditForm = ({userData, loading}) => {\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n    }\r\n\r\n    const dataFields = [\r\n        {\r\n            id: 'id',\r\n            type: 'text',\r\n            label: 'User Id',\r\n            disabled: true\r\n        },\r\n        {\r\n            id: 'email',\r\n            type: 'email',\r\n            label: 'Email'\r\n        },\r\n        {\r\n            id: 'firstName',\r\n            type: 'text',\r\n            label: 'First Name'\r\n        },\r\n        {\r\n            id: 'lastName',\r\n            type: 'text',\r\n            label: 'Last Name'\r\n        },\r\n        {\r\n            id: 'role',\r\n            type: 'select',\r\n            label: 'Role',\r\n            options: [\r\n                {value: 'ADMINISTRATOR', name: 'Admin'},\r\n                {value: 'MEMBER', name: 'Member'},\r\n                {value: 'EMPLOYEE', name: 'Employee'}\r\n            ],\r\n            disabled: true\r\n        },\r\n        {\r\n            id: 'username',\r\n            type: 'text',\r\n            label: 'Username'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !loading ? (\r\n                        <FormWithDefaults data={dataFields}\r\n                                          defaultValues={userData}\r\n                                          validationSchema={userFormDefaults}\r\n                                          onSubmit={onSubmit}/>\r\n                    ) :\r\n                    <FontAwesomeIcon icon='spinner' pulse={true}/>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nUserEditForm.propTypes = {\r\n    userData: PropTypes.object,\r\n    loading: PropTypes.bool\r\n};\r\n\r\nexport default UserEditForm;\r\n","import React, {useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '../../components/Table'\r\nimport Modal from '../../components/Modal'\r\nimport UserEditForm from './UserEditForm';\r\nimport API from '../../utils/API';\r\n\r\n\r\nconst UserTable = ({data}) => {\r\n    const [modalDetails, setModalDetails] = useState({\r\n        userType: null,\r\n        userData: null,\r\n        loading: true\r\n    })\r\n\r\n    const columns = useMemo(() => {\r\n\r\n        const onEdit = async (e) => {\r\n            setModalDetails({...modalDetails, loading: true})\r\n            e.preventDefault();\r\n            const userId = e.target.getAttribute('data-userid');\r\n\r\n            const userData = await API.User.getUserById(userId);\r\n\r\n            setModalDetails({...modalDetails, userData: userData.data, loading: false})\r\n\r\n        }\r\n        return [\r\n            {\r\n                Header: 'User Id',\r\n                accessor: 'id'\r\n            },\r\n            {\r\n                Header: 'First name',\r\n                accessor: 'firstName',\r\n            },\r\n            {\r\n                Header: 'Last Name',\r\n                accessor: 'lastName'\r\n            },\r\n            {\r\n                Header: 'Username',\r\n                accessor: 'username'\r\n            },\r\n            {\r\n                Header: 'Role',\r\n                accessor: 'role'\r\n            },\r\n            {\r\n                Header: 'Edit',\r\n                Cell: ({cell}) => {\r\n                    const {row: original} = cell;\r\n                    return (\r\n                        <button className='btn btn-primary' onClick={onEdit}\r\n                                data-bs-toggle='modal'\r\n                                data-bs-target='#userEdit'\r\n                                data-userid={original.original.id}\r\n                        >\r\n                            Edit\r\n                        </button>\r\n\r\n                    )\r\n                }\r\n            }\r\n\r\n        ]\r\n    }, [modalDetails])\r\n\r\n    return (\r\n        <div>\r\n            <Table data={data} columns={columns}/>\r\n            <Modal modalId='userEdit' title='Edit'>\r\n                <UserEditForm userData={modalDetails.userData} loading={modalDetails.loading}/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserTable.propTypes = {\r\n    data: PropTypes.array\r\n};\r\n\r\nexport default UserTable;\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pagination = ({data, setPagination}) => {\r\n    // console.log('Pagination Data: ', data)\r\n    const [tablePagination, setTablePagination] = useState({\r\n        isFirst: false,\r\n        isLast: false,\r\n        canPrevious: false,\r\n        canNext: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        setTablePagination({\r\n            isFirst: data.first,\r\n            isLast: data.last,\r\n            canPrevious: (data.number - 1) > 0,\r\n            canNext: (data.number + 1) < data.totalPages,\r\n        })\r\n    }, [data])\r\n\r\n    const goToFirstPage=(e) =>{\r\n        e.preventDefault();\r\n        setPagination({page: 0});\r\n    }\r\n\r\n    const goBackOne = (e) => {\r\n        e.preventDefault();\r\n        setPagination({page: data.number - 1});\r\n    }\r\n    const goForwardOne = (e) => {\r\n        e.preventDefault();\r\n        setPagination({page: data.number + 1});\r\n    }\r\n    const goToLastPage=(e) =>{\r\n        e.preventDefault();\r\n        setPagination({page: data.totalPages-1});\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=''>\r\n            <nav aria-label='Table Pagination'>\r\n                <ul className='pagination justify-content-center'>\r\n                    <li className={`page-item ${tablePagination.canPrevious ? '' : 'disabled'}`} aria-label='Previous'>\r\n                        <button className='page-link' onClick={goToFirstPage}>\r\n                            <span aria-hidden='true'>&laquo;</span>\r\n                        </button>\r\n                    </li>\r\n                    {\r\n                        tablePagination.canPrevious ? (\r\n                            <li className='page-item'>\r\n                                <button className='page-link' onClick={goBackOne} >\r\n                                    {data.number}\r\n                                </button>\r\n                            </li>\r\n                        ) : ('')\r\n                    }\r\n                    <li className='page-item active'>\r\n                        <button className='page-link active'>\r\n                            {data.number + 1}\r\n                        </button>\r\n                    </li>\r\n\r\n                    {\r\n                        tablePagination.canNext ? (\r\n                            <li className='page-item'>\r\n                                <button className='page-link' onClick={goForwardOne}>\r\n                                    {data.number + 2}\r\n                                </button>\r\n                            </li>\r\n                        ) : ('')\r\n                    }\r\n\r\n                    <li className={`page-item ${tablePagination.canNext ? '' : 'disabled'}`} aria-label='Next'>\r\n                        <button className='page-link' onClick={goToLastPage}>\r\n                            <span aria-hidden='true'>&raquo;</span>\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nPagination.propTypes = {\r\n    data: PropTypes.object\r\n};\r\n\r\nexport default Pagination;\r\n","import React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport Modal from '../../components/Modal'\r\nimport {SelectUserType} from './SelectUserType';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useQuery} from 'react-query'\r\nimport API from '../../utils/API';\r\nimport UserTable from './UserTable';\r\nimport Pagination from '../../components/Table/Pagination';\r\n\r\nconst Index = () => {\r\n    const [pages, setPages] = useState({page: 0})\r\n\r\n    const fetchUsers = async () => {\r\n        const {data} = await API.User.getUsers(pages)\r\n        return data;\r\n    }\r\n\r\n    const {data, error, isError, isLoading} = useQuery(\r\n        ['users', pages.page],\r\n        fetchUsers,\r\n        {keepPreviousData: true, staleTime: 5000})\r\n\r\n\r\n    return (\r\n        <div className='w-75 mx-auto my-2 py-3 '>\r\n            <Helmet>\r\n                <title>User Management</title>\r\n                <meta\r\n                    name='description'\r\n                    content='User management for Aline Financial'\r\n                />\r\n            </Helmet>\r\n            <h1 className='display-5'>Users Management</h1>\r\n            <Modal modalId='userModal' title='Create a User'>\r\n                <p>Select User type to create: </p>\r\n                <SelectUserType/>\r\n            </Modal>\r\n            <div className='my-2'>\r\n                <button className='btn btn-primary ' data-bs-toggle='modal' data-bs-target='#userModal'>\r\n                    <span>Create user<FontAwesomeIcon icon='plus' className='ms-2'/></span>\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    isLoading || isError?\r\n                        <div>table is loading . . .{isError? <span>error: {error.message}</span>:''}</div> : (\r\n                            <div>\r\n                                <UserTable data={data.content}/>\r\n                                <Pagination data={data} setPagination={setPages}/>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst Index = () => {\r\n    return (\r\n        <div className='w-75 mx-auto my-2 py-3'>\r\n            <Helmet>\r\n                <title>Transaction Management</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Transaction management for Aline Financial'\r\n                />\r\n            </Helmet>\r\n            <h1 className='display-5'>Transactions Management</h1>\r\n            <Link className='btn btn-primary' to={{pathname: '/transaction/create'}}>Add Transaction</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nIndex.propTypes = {};\r\n\r\nexport default Index;\r\n","import * as yup from 'yup';\r\nimport baseSchema from './library'\r\n\r\nconst {\r\n    transactionType,\r\n    transactionMethod,\r\n    amount,\r\n    merchantCode,\r\n    merchantName,\r\n    accountNumber,\r\n    transactionDescription\r\n}= baseSchema\r\n\r\nconst schema = yup.object().shape({\r\n    type: transactionType,\r\n    method: transactionMethod,\r\n    amount,\r\n    merchantCode,\r\n    merchantName,\r\n    accountNumber,\r\n    description: transactionDescription\r\n})\r\n\r\nexport default schema;\r\n","import React from 'react';\r\nimport Form from '../../components/Form'\r\nimport schema from '../../utils/Validation/TransactionForm'\r\nimport API from '../../utils/API';\r\nimport {Helmet} from 'react-helmet';\r\n\r\n\r\nconst Index = () => {\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data)\r\n        const newTransaction = {\r\n            ...data,\r\n            amount: data.amount*100,\r\n        }\r\n\r\n        try{\r\n            const res = await API.Transaction.create(newTransaction);\r\n            console.log(res)\r\n        }catch (e) {\r\n            console.error(e.message())\r\n        }\r\n    }\r\n\r\n    const formData = [\r\n        {\r\n            id: 'type',\r\n            type: 'select',\r\n            label: 'Transaction Type',\r\n            options: [\r\n                {value: 'PURCHASE', name: 'Purchase'},\r\n                {value: 'PAYMENT', name: 'Payment'},\r\n                {value: 'DEPOSIT', name: 'Deposit'},\r\n                {value: 'REFUND', name: 'Refund'},\r\n                {value: 'VOID', name: 'Void'},\r\n            ]\r\n        },\r\n        {\r\n            id: 'method',\r\n            type: 'text',\r\n            label: 'Transaction Method'\r\n        },\r\n        {\r\n            id: 'amount',\r\n            type: 'number',\r\n            label: 'Amount'\r\n        },\r\n        {\r\n            id: 'merchantCode',\r\n            type: 'UppercaseText',\r\n            label: 'Merchant Code',\r\n        },\r\n        {\r\n            id: 'merchantName',\r\n            type: 'text',\r\n            label: 'Merchant Name'\r\n        },\r\n        {\r\n            id: 'accountNumber',\r\n            type: 'text',\r\n            label: 'Account number'\r\n        },\r\n        {\r\n            id:'description',\r\n            type: 'text',\r\n            label: 'Transaction Description'\r\n        }\r\n\r\n    ]\r\n\r\n    return (\r\n        <div className='w-75 mx-auto'>\r\n            <Helmet>\r\n                <title>Post Transaction</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Post Transaction for Aline Financial'\r\n                />\r\n            </Helmet>\r\n            <h1 className='display-5 mb-3 mt-5'>Post Transaction</h1>\r\n            <hr className='mb-5'/>\r\n            <Form data={formData} onSubmit={onSubmit} validationSchema={schema}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nIndex.propTypes = {};\r\n\r\nexport default Index;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nconst AccountMask = ({number}) => {\r\n    const [view, setView] = useState({mask:true})\r\n\r\n    const values = {\r\n        original: number,\r\n        mask: '**********'\r\n    }\r\n\r\n    const changeView = (e) =>{\r\n        e.preventDefault()\r\n        setView({mask: !view.mask})\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex align-items-center justify-content-evenly'>\r\n            {\r\n                !view.mask? values.original: (\r\n                    <div>{values.mask}</div>\r\n                )\r\n            }\r\n            {/*Toggle mask view icon*/}\r\n            <div className='text-primary'>\r\n                {\r\n                    view.mask?\r\n                        <FontAwesomeIcon icon='eye' onClick={changeView}/>\r\n                        :\r\n                        <FontAwesomeIcon icon='eye-slash' onClick={changeView}/>\r\n\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nAccountMask.propTypes = {\r\n    number: PropTypes.string\r\n};\r\n\r\nexport default AccountMask;\r\n","import React, {useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '../../components/Table'\r\nimport {useQuery} from 'react-query';\r\nimport API from '../../utils/API';\r\n\r\nconst TransactionsTable = ({accountId}) => {\r\n\r\n    const [pages, setPages] = useState({page: 0})\r\n\r\n    const fetchTransactions = async () => {\r\n        const {data} = await API.Transaction.getTransactionByAccountId(accountId, pages)\r\n        return data;\r\n    }\r\n\r\n    const {data, error, isError, isLoading} = useQuery(\r\n        ['accountTransaction', pages.page],\r\n        fetchTransactions,\r\n        {keepPreviousData: true, staleTime: 5000})\r\n\r\n    const columns = useMemo(() => {\r\n        return [\r\n            {\r\n                Header: 'ID',\r\n                accessor: 'id'\r\n            },\r\n            {\r\n                Header: 'Amount',\r\n                accessor: 'amount'\r\n            },\r\n            {\r\n                Header: 'Type',\r\n                accessor: 'Type'\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'Status'\r\n            },\r\n            {\r\n                Header: 'Vendor',\r\n                accessor: 'merchant'\r\n            }\r\n        ]\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ? 'Loading' : (\r\n                    <Table data={data.content} columns={columns}/>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nTransactionsTable.propTypes = {\r\n    accountId: PropTypes.number\r\n};\r\n\r\nexport default TransactionsTable;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionstTable from './TransactionsTable';\r\n\r\nconst AccountCard = ({account, error}) => {\r\n\r\n    return (\r\n        <div className='card'>\r\n            {\r\n                error?\r\n                    <div className='card-subtitle lead fw-normal'>Error retrieving account</div>:\r\n                    (\r\n                        <div className='card-body'>\r\n                            <h5 className='card-title display-6 lead'>{account?.type}</h5>\r\n                            <hr/>\r\n                            <h6 className='card-subtitle lead fw-normal'>Account Number: {account?.accountNumber}</h6>\r\n                            <h6 className='card-subtitle lead fw-normal'>Status: <span\r\n                                className='text-capitalize'>{account?.status.toString().toLowerCase()}</span></h6>\r\n                            <br/>\r\n                            <div>Balance: {account?.balance}</div>\r\n                            {\r\n                                account?.type === 'CHECKING' ?\r\n                                    <div>Available Balance: {account.availableBalance}</div> :\r\n                                    <div>APY: {account.apy}</div>\r\n                            }\r\n                            <br/>\r\n                            <TransactionstTable accountId={account.id}/>\r\n                        </div>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nAccountCard.propTypes = {\r\n    account: PropTypes.object,\r\n    error: PropTypes.bool\r\n};\r\n\r\nexport default AccountCard;\r\n","import React, {useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '../../components/Table'\r\nimport AccountMask from './AccountMask';\r\nimport API from '../../utils/API';\r\nimport AccountCard from './AccountCard';\r\n\r\nconst AccountsTable = ({data}) => {\r\n    const [accountDetails, setAccountDetails] = useState({\r\n        view: false,\r\n        account: null,\r\n        error: false\r\n    })\r\n\r\n\r\n    const columns = useMemo(() => {\r\n\r\n        const onView = async (e) => {\r\n            e.preventDefault();\r\n            setAccountDetails({...accountDetails, view:false, error:false})\r\n            const accountId = e.target.getAttribute('data-id');\r\n            try {\r\n                const {data} = await API.Accounts.getAccountById(accountId);\r\n                setAccountDetails({account: data, view:true, error: false})\r\n                console.log(data)\r\n            }catch (e) {\r\n                setAccountDetails({...accountDetails, view: false, error:true})\r\n                console.error(e)\r\n            }\r\n            console.log('accountId: ', accountId)\r\n        }\r\n\r\n        return [\r\n            {\r\n                Header: 'Account Number',\r\n                accessor: 'accountNumber',\r\n                Cell: ({cell}) => {\r\n                    const {value} = cell;\r\n                    return <AccountMask number={value}/>\r\n                }\r\n            },\r\n            {\r\n                Header: 'Type',\r\n                accessor: 'type'\r\n            },\r\n            {\r\n                Header: 'Balance',\r\n                accessor: 'balance'\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'status'\r\n            },\r\n            {\r\n                Header: 'View',\r\n                Cell: ({cell}) => {\r\n                    const {row: original} = cell;\r\n                    const cellVal = original.original;\r\n                    return <button className='btn btn-outline-primary'\r\n                                   data-id={cellVal.id}\r\n                                   onClick={onView}\r\n                            >View</button>\r\n                }\r\n            }\r\n        ]\r\n    }, [accountDetails])\r\n\r\n    return (\r\n        <div>\r\n            <Table data={data} columns={columns}/>\r\n            {\r\n                accountDetails.view ?\r\n                    <AccountCard account={accountDetails.account} error={accountDetails.error}/>:\r\n                    <div className='lead fs-3 fw-normal'>Please select Account to view</div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nAccountsTable.propTypes = {\r\n    data: PropTypes.array\r\n};\r\n\r\nexport default AccountsTable;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\nimport API from '../../utils/API';\r\nimport AccountsTable from './AccountsTable';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nconst Index = () => {\r\n    let location = useLocation();\r\n    const [member, setMember] = useState({\r\n        id: null,\r\n        accounts: null,\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetchAccounts = async () => {\r\n            try {\r\n                const {data} = await API.Accounts.getAccountsByMemberID(location.state.memberId)\r\n                setMember({id: location.state.memberId, accounts: data.content, loading: false})\r\n            } catch (e) {\r\n                console.error(e)\r\n            }\r\n        }\r\n\r\n        if (location?.state?.memberId) {\r\n            fetchAccounts();\r\n        }\r\n    }, [location?.state?.memberId])\r\n\r\n    return (\r\n        <div className='w-75 mx-auto my-2 py-3'>\r\n            <Helmet>\r\n                <title>Member Accounts</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Review Member Account'\r\n                />\r\n            </Helmet>\r\n            <h1 className='display-5'>Member Accounts</h1>\r\n\r\n            <div className='mt-4'>\r\n                {\r\n                    member.loading?(\r\n                        <FontAwesomeIcon icon='spinner' pulse={true}/>\r\n                    ):(\r\n                        <AccountsTable data={member.accounts}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","import * as yup from 'yup';\r\nimport baseSchema from './library'\r\n\r\nconst {\r\n    searchId,\r\n    searchName,\r\n    searchAmount\r\n} = baseSchema\r\n\r\nconst schema = yup.object().shape({\r\n    searchName: searchName,\r\n    searchId: searchId,\r\n    accountFloor:searchAmount,\r\n    accountCeiling: searchAmount,\r\n})\r\n\r\nexport default schema;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from '../../components/Form'\r\nimport validationSchema from '../../utils/Validation/SearchForm'\r\n\r\nconst SearchForm = ({onSubmit}) => {\r\n    const searchCriteria= [\r\n        {\r\n            id: 'searchName',\r\n            type: 'text',\r\n            label: 'First/Middle/Last name'\r\n        },\r\n        {\r\n            id: 'searchId',\r\n            type: 'number',\r\n            label: 'Membership/Applicant Id'\r\n        },\r\n        {\r\n            id:'floorAmount',\r\n            type: 'number',\r\n            label: 'Accounts with at least'\r\n        },\r\n        {\r\n            id:'ceilingAmount',\r\n            type: 'number',\r\n            label: 'Accounts with at most'\r\n        },\r\n        {\r\n            id: 'hasChecking',\r\n            type: 'checkbox',\r\n            label: 'Members with Checking Accounts'\r\n        },\r\n        {\r\n            id: 'hasSavings',\r\n            type: 'checkbox',\r\n            label: 'Members with Savings Accounts'\r\n        },\r\n        {\r\n            id: 'isPrimary',\r\n            type: 'checkbox',\r\n            label: 'Primary Account Holders'\r\n        },\r\n        {\r\n            id: 'accountStatus',\r\n            type: 'select',\r\n            label: 'Account Status',\r\n            options: [\r\n                {value: '', name: 'Any'},\r\n                {value: 'active', name: 'Active'},\r\n                {value: 'pending', name: 'Pending'},\r\n                {value: 'denied', name: 'Denied'}\r\n            ]\r\n        }\r\n\r\n    ]\r\n\r\n    return (\r\n        <Form data={searchCriteria} onSubmit={onSubmit} validationSchema={validationSchema}/>\r\n    );\r\n};\r\n\r\nSearchForm.propTypes = {\r\n    onSubmit: PropTypes.func\r\n};\r\n\r\nexport default SearchForm;\r\n","import * as yup from 'yup';\r\nimport baseSchema from './library'\r\n\r\nconst{\r\n    firstName,\r\n    middleName,\r\n    lastName,\r\n    income,\r\n    phone,\r\n    email,\r\n    address,\r\n    city,\r\n    state,\r\n    zipcode,\r\n    mailingAddress,\r\n    mailingCity,\r\n    mailingState,\r\n    mailingZipcode\r\n} = baseSchema\r\n\r\nconst schema = yup.object().shape({\r\n    firstName,\r\n    middleName,\r\n    lastName,\r\n    income,\r\n    phone,\r\n    email,\r\n    address,\r\n    city,\r\n    state,\r\n    zipcode,\r\n    mailingAddress,\r\n    mailingCity,\r\n    mailingState,\r\n    mailingZipcode\r\n})\r\n\r\nexport default schema;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FormWithDefaults from '../../components/Form/FormWithDefaults';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport schema from '../../utils/Validation/MemberForm'\r\nimport API from '../../utils/API';\r\n\r\nconst MemberEditForm = ({memberData, loading, membershipId}) => {\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log('Membership ID from edit form: ', membershipId)\r\n        const update = {\r\n            membershipId: membershipId,\r\n            email: data.email,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            middleName: data.lastName,\r\n            phone: data.phone,\r\n            driversLicense: data.driversLicense,\r\n            income: data.income,\r\n            address: data.address,\r\n            city: data.city,\r\n            state: data.state,\r\n            zipcode: data.zipcode,\r\n            mailingAddress: data.mailingAddress,\r\n            mailingCity: data.mailingCity,\r\n            mailingState: data.mailingState,\r\n            mailingZipcode: data.mailingZipcode\r\n        }\r\n\r\n\r\n        try {\r\n            await API.Bank.updateMember(update)\r\n        }catch (e) {\r\n            console.error('errrrrorrrrr')\r\n        }\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    const dataFields = [\r\n        {\r\n            id: 'firstName',\r\n            type: 'text',\r\n            label: 'First Name'\r\n        },\r\n        {\r\n            id: 'middleName',\r\n            type: 'text',\r\n            label: 'Middle Name'\r\n        },\r\n        {\r\n            id: 'lastName',\r\n            type: 'text',\r\n            label: 'Last Name'\r\n        },\r\n        {\r\n            id: 'income',\r\n            type: 'income',\r\n            label: 'Income'\r\n        },\r\n        {\r\n            id: 'phone',\r\n            type: 'phone',\r\n            label: 'phone'\r\n        },\r\n        {\r\n            id: 'email',\r\n            type: 'email',\r\n            label: 'Email'\r\n        },\r\n        {\r\n            id: 'address',\r\n            type: 'addressWithMailingOption',\r\n            label: 'Address'\r\n        }\r\n    ]\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !loading? (\r\n                    <FormWithDefaults data={dataFields}\r\n                                      defaultValues={memberData}\r\n                                      validationSchema={schema}\r\n                                      onSubmit={onSubmit}/>\r\n                ):\r\n                    <FontAwesomeIcon icon='spinner' pulse={true}/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nMemberEditForm.propTypes = {\r\n    memberData: PropTypes.object,\r\n    loading: PropTypes.bool,\r\n    membershipId: PropTypes.string\r\n};\r\n\r\nexport default MemberEditForm;\r\n","import React, {useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '../../components/Table'\r\nimport Modal from '../../components/Modal'\r\nimport API from '../../utils/API';\r\nimport MemberEditForm from './MemberEditForm';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst MembersTable = ({data}) => {\r\n    const [modalDetails, setModalDetails] = useState({\r\n        memberData: null,\r\n        loading: true,\r\n        memberId: null,\r\n    })\r\n\r\n    const [redirectDetails, setRedirectDetails] = useState({\r\n        isRedirect: false,\r\n        pathname: '/member/accounts',\r\n        memberId: null,\r\n    })\r\n\r\n\r\n    const columns = useMemo(() => {\r\n\r\n        const onEdit = async (e) => {\r\n            e.preventDefault()\r\n            setModalDetails({...modalDetails, loading: true})\r\n            const membership = e.target.getAttribute('data-membership');\r\n            const {data} = await API.Bank.getMemberByMembershipId(membership)\r\n            setModalDetails({...modalDetails, memberData: data.applicant, loading: false, memberId: membership})\r\n        }\r\n\r\n        const onRedirect = (e) => {\r\n            e.preventDefault()\r\n            const memberId = e.target.getAttribute('data-memberid');\r\n            setRedirectDetails({\r\n                ...redirectDetails,\r\n                isRedirect: true,\r\n                memberId\r\n            })\r\n        }\r\n\r\n        return [{\r\n                Header: 'Membership Id',\r\n                accessor: 'membershipId'\r\n            },\r\n            {\r\n                Header: 'First name',\r\n                accessor: 'applicant.firstName'\r\n            },\r\n            {\r\n                Header: 'Last name',\r\n                accessor: 'applicant.lastName'\r\n            },\r\n            {\r\n                Header: 'Branch City',\r\n                accessor: 'branch.city'\r\n            },\r\n            {\r\n                Header: 'Edit',\r\n                Cell: ({cell}) => {\r\n                    const {row: original} = cell;\r\n                    return (\r\n                        <button className='btn btn-primary' onClick={onEdit}\r\n                                data-bs-toggle='modal'\r\n                                data-bs-target='#memberEdit'\r\n                                data-membership={original.original.membershipId}\r\n                        >\r\n                            Edit\r\n                        </button>\r\n\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: 'Accounts',\r\n                Cell: ({cell}) => {\r\n                    const {row: original} = cell;\r\n                    return (\r\n                        <button className='btn btn-secondary'\r\n                                data-memberid={original.original.applicant.id}\r\n                                onClick={onRedirect}\r\n                        >\r\n                            View\r\n                        </button>\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n\r\n    }, [modalDetails, redirectDetails])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                redirectDetails.isRedirect ? (\r\n                    <Redirect push to={{\r\n                        pathname: redirectDetails.pathname,\r\n                        state: {memberId: redirectDetails.memberId}\r\n                    }}/>\r\n                ) : (\r\n                    <Table data={data} columns={columns}/>\r\n                )\r\n            }\r\n\r\n            <Modal modalId='memberEdit' title='Edit Member Details'>\r\n                <MemberEditForm memberData={modalDetails.memberData} loading={modalDetails.loading}\r\n                                membershipId={modalDetails.memberId}/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nMembersTable.propTypes = {\r\n    data: PropTypes.array\r\n};\r\n\r\nexport default MembersTable;\r\n","import React, {useRef, useState} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport SearchForm from './SearchForm';\r\nimport API from '../../utils/API';\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\r\nimport Pagination from '../../components/Table/Pagination';\r\nimport MembersTable from './MembersTable';\r\n\r\nconst Index = options => {\r\n    const queryClient = useQueryClient();\r\n\r\n    const [pages, setPages] = useState({page: 0})\r\n    const {mutate} = useMutation(API.Bank.searchMembers, {\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries(['members', pages.page])\r\n        }\r\n    })\r\n\r\n    const fetchMembers = async () => {\r\n\r\n        const {data} = await API.Bank.searchMembers({...pages})\r\n        return data;\r\n    }\r\n\r\n    const {data, error, isError, isLoading} = useQuery(\r\n        ['members', pages.page],\r\n        fetchMembers,\r\n        {keepPreviousData: true, staleTime: 5000})\r\n\r\n    const dropdownRef = useRef();\r\n\r\n    const onDowntownRotate = () => {\r\n        dropdownRef.current.classList.toggle('rotate-180')\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        mutate(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='w-75 mx-auto my-2 py-3'>\r\n            <Helmet>\r\n                <title>Members Management</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Members management for Aline Financial'\r\n                />\r\n            </Helmet>\r\n            <h1 className='display-5'>Members Management</h1>\r\n\r\n            <div className='mb-5 mt-3'>\r\n                <div className='d-flex'>\r\n\r\n                    <button type='button' className='btn btn-primary rounded-circle rotate me-2'\r\n                            data-bs-toggle='collapse'\r\n                            data-bs-target='#searchArea'\r\n                            aria-expanded='false'\r\n                            aria-controls='searchArea'\r\n                            ref={dropdownRef}\r\n                            onClick={onDowntownRotate}\r\n                    >\r\n                        <FontAwesomeIcon icon='chevron-up' rotation={180}/>\r\n                    </button>\r\n                    <div>\r\n                        <h2 className='fs-4 fw-normal me-3'>Search</h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='collapse pt-2' id='searchArea'>\r\n                    <SearchForm onSubmit={onSubmit}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='text-start'>\r\n                <Link className='btn btn-primary mb-3 '\r\n                      to={{\r\n                          pathname: '/member/create'\r\n                      }}\r\n                >\r\n                    Add Member<FontAwesomeIcon icon='plus'/>\r\n                </Link>\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    isLoading || isError ?\r\n                        <div>table is loading . . .{isError ? <span>error: {error.message}</span> : ''}</div> : (\r\n                            <div>\r\n                                <MembersTable data={data.content}/>\r\n                                <Pagination data={data} setPagination={setPages}/>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Index;\r\n","import {createContext, useContext, useState} from 'react';\r\nimport {Client} from '@stomp/stompjs';\r\n\r\nexport const StompContext = createContext({\r\n    client: null,\r\n    connect: () => {\r\n    },\r\n})\r\n\r\nexport function UseStompContext() {\r\n    const {client, connect, onConnect} = useContext(StompContext);\r\n    return {client, connect, onConnect};\r\n}\r\n\r\nexport default function StompContextProvider({children}) {\r\n    const [stompClient, setStompClient] = useState();\r\n    const BROKER_URL = process.env.REACT_APP_BROKER_URL;\r\n\r\n    const onClientConnect = ( onError, onMessageReceived) => {\r\n        let myStompClient;\r\n\r\n        console.log('Context Trying to connect...')\r\n        let stompConfig = {\r\n            brokerURL: BROKER_URL,\r\n            debug: msg => {\r\n                console.log('Debug: ', msg)\r\n            },\r\n            connectHeaders: {\r\n                username: 'username',\r\n            },\r\n            onConnect: function () {\r\n                console.log('Trying to subscribe ...')\r\n                myStompClient.subscribe('/topic/public',\r\n                    function (message) {\r\n                        console.log('message from subscribe: ', message)\r\n                        onMessageReceived(message)\r\n                    }\r\n                );\r\n            }\r\n            // onStompError: onError,\r\n        }\r\n\r\n        myStompClient = new Client(stompConfig)\r\n\r\n        myStompClient.onStompError(onError)\r\n        myStompClient.activate();\r\n        setStompClient(myStompClient)\r\n\r\n    }\r\n\r\n    return (\r\n        <StompContext.Provider\r\n            value={{\r\n                client: stompClient,\r\n                connect: onClientConnect,\r\n            }}\r\n        >\r\n            {children}\r\n        </StompContext.Provider>\r\n    )\r\n}\r\n","import React, {createRef, useState} from 'react';\r\nimport {UseStompContext} from '../../utils/StompContext';\r\nimport {UseUserSession} from '../../utils/UserContext';\r\n\r\nconst ChatArea = ({changeStatus}) => {\r\n    const {user} = UseUserSession();\r\n\r\n    const [username, setUsername] = useState({name: user})\r\n    const [message, setMessage] = useState({msg: ''})\r\n    const [msgList, setMsgList] = useState({list: []})\r\n    const {client, connect} = UseStompContext()\r\n\r\n    const userPage = createRef();\r\n    const chatPage = createRef();\r\n    const usernameForm = createRef();\r\n    const messageForm = createRef();\r\n    const messageInput = createRef();\r\n    const messageArea = createRef();\r\n    const connectingEl = createRef();\r\n\r\n    const onChangeUser = (e) => {\r\n        setUsername({name: e.target.value})\r\n    }\r\n    const onMessageChange = (e) => {\r\n        setMessage({msg: e.target.value})\r\n    }\r\n\r\n    const onError = (error) => {\r\n        console.error(error)\r\n\r\n    }\r\n    const myConnect = (e) => {\r\n        e.preventDefault();\r\n        console.log('logging on')\r\n        console.log('user', user)\r\n        changeStatus()\r\n        if (username) {\r\n            userPage.current.classList.add('d-none');\r\n            chatPage.current.classList.remove('d-none')\r\n            connect(onError, onMessageReceived);\r\n        }\r\n    }\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log('begin send msg....')\r\n        let chatMessage = {\r\n            sender: username.name,\r\n            content: message.msg,\r\n            type: 'CHAT'\r\n        }\r\n\r\n        client.publish({destination: '/app/chat.sendMessage', body: JSON.stringify(chatMessage)})\r\n        setMessage({msg: ''})\r\n    }\r\n\r\n    const onMessageReceived = (payload) => {\r\n        console.log('Msg received Payload: ', payload)\r\n        const receivedMsg = JSON.parse(payload.body)\r\n        console.log('Parsed Body from message received ', receivedMsg)\r\n        const tempMsgs = msgList.list;\r\n        tempMsgs.push(receivedMsg);\r\n\r\n        setMsgList({list: tempMsgs})\r\n    }\r\n    return (\r\n        <div>\r\n            <div id=\"username-page\" ref={userPage}>\r\n                <div className=\"username-page-container\">\r\n                    <h1 className=\"lead fs-3 mb-3\">Type your username</h1>\r\n                    <div id=\"usernameForm\" className=\"usernameForm\" ref={usernameForm}>\r\n                        <div className=\"form-group mb-2\">\r\n                            <input type=\"text\" id=\"name\" placeholder=\"Username\" autoComplete=\"off\"\r\n                                   className=\"form-control\" value={username.name} onChange={onChangeUser}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type='button' className=\"btn btn-secondary\" onClick={myConnect}>Start Chatting\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"chat-page\" className=\"d-none\" ref={chatPage}>\r\n                <div className=\"chat-container\">\r\n                    <div className=\"lead fs-4\" ref={connectingEl}>\r\n                        Connecting...\r\n                    </div>\r\n                    <ul id=\"messageArea\" ref={messageArea}>\r\n                        {\r\n                            msgList.list ?\r\n                                msgList.list.map((msg, index) => {\r\n                                    return <li key={index}><span style={{\r\n                                        color: 'white',\r\n                                        backgroundColor: 'black',\r\n                                        padding:'5px'\r\n\r\n                                    }\r\n                                    }>sender: {msg.sender}</span> {msg.content}</li>\r\n                                })\r\n                                :\r\n                                <div>No messages yet</div>\r\n                        }\r\n                    </ul>\r\n                    <div id=\"messageForm\" className=\"messageForm\" ref={messageForm}>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"input-group clearfix\">\r\n                                <input type=\"text\" id=\"message\" placeholder=\"Type a message...\" autoComplete=\"off\"\r\n                                       className=\"form-control\" ref={messageInput} value={message.msg}\r\n                                       onChange={onMessageChange}/>\r\n                                <button type=\"button\" className=\"btn btn-outline-dark\" onClick={sendMessage}>Send</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nChatArea.propTypes = {\r\n\r\n};\r\n\r\nexport default ChatArea;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport StompContextProvider from '../../utils/StompContext';\r\nimport ChatArea from './ChatArea';\r\n\r\nconst Index = () => {\r\n    const [status, setStatus] = useState(false);\r\n    const circleRef = useRef();\r\n\r\n    useEffect(()=>{\r\n        const circleEl = circleRef.current\r\n        if(status){\r\n            circleEl.classList.remove('bg-danger');\r\n            circleEl.classList.add('bg-success')\r\n        } else{\r\n            circleEl.classList.remove('bg-success');\r\n            circleEl.classList.add('bg-danger')\r\n        }\r\n    },[status])\r\n\r\n    const changeStatus = () =>{\r\n        setStatus(!status)\r\n    }\r\n\r\n    return (\r\n        <div className='w-75 mx-auto my-2 py-3'>\r\n            <Helmet>\r\n                <title>Chat</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Chat'\r\n                />\r\n            </Helmet>\r\n            <div className='display-5 position-relative'>Chat\r\n                <span ref={circleRef} className='position-absolute top-50\r\n                 translate-middle p-2 ms-3 mt-1 bg-danger border border-light rounded-circle'>\r\n                    <span className='visually-hidden'>chat status</span>\r\n                </span>\r\n            </div>\r\n            \r\n            <StompContextProvider>\r\n                <ChatArea changeStatus={changeStatus}/>\r\n            </StompContextProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n/**\r\n * Navigation menu options for Sidebar\r\n *\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nconst Navigation = () => {\r\n\r\n    const menu = [\r\n        {\r\n            link: '/user',\r\n            display: 'Users'\r\n        },\r\n        {\r\n            link: '/member',\r\n            display: 'Members'\r\n        },\r\n        {\r\n            link: '/transaction',\r\n            display: 'Transactions'\r\n        },\r\n        {\r\n            link: '/account',\r\n            display: 'Accounts'\r\n        },\r\n        {\r\n            link: '/chat',\r\n            display: 'Chat'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <nav>\r\n            <NavLink exact to='/' activeClassName='font-bold' className='text-white nav-link mb-auto'>Home</NavLink>\r\n            {menu.map(nav => {\r\n                return (\r\n                    <NavLink key={nav.link} to={nav.link} activeClassName='font-bold'\r\n                             className='nav-link text-white '>\r\n                        {nav.display}\r\n                    </NavLink>\r\n                )\r\n            })}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import {useEffect, useState} from 'react';\r\n\r\nconst UseWindowSize = () => {\r\n\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined\r\n    });\r\n\r\n    useEffect(()=>{\r\n        const handleResize= ()=>{\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight\r\n            })\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n        handleResize();\r\n\r\n        return ()=>{window.removeEventListener('resize',handleResize)}\r\n    }, [])\r\n\r\n\r\n    return windowSize;\r\n};\r\n\r\nexport default UseWindowSize;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport './QuickMenu.scss'\r\nimport AllActions from '../../utils/Actions'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Index = () => {\r\n    const [recentActions, setRecentActions] = useState([])\r\n\r\n    useEffect(() => {\r\n        if ('RecentActions' in localStorage) {\r\n            const recentArr = JSON.parse(localStorage.getItem('RecentActions'))\r\n            recentArr.length = 2\r\n            setRecentActions([...recentArr])\r\n        } else {\r\n            setRecentActions([AllActions[0], AllActions[1]])\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <footer className='quick-menu d-flex flex-column-reverse'>\r\n            <button className='btn btn-outline-dark rounded-circle quick-menu-more'\r\n            >\r\n                <FontAwesomeIcon icon='ellipsis-v'/>\r\n            </button>\r\n            <div className='quick-menu-items d-flex flex-column-reverse'>\r\n                <Link className='btn btn-outline-dark rounded-circle mb-2'\r\n                      to={{\r\n                          pathname: '/'\r\n                      }}\r\n                >\r\n                    <FontAwesomeIcon icon='home'/>\r\n                </Link>\r\n                {\r\n                    recentActions.map((act, index) => (\r\n                        <Link className='btn btn-outline-dark rounded-circle mb-2'\r\n                              to={{\r\n                                  pathname: act.link,\r\n                                  state: act?.state\r\n                              }}\r\n                              key={index}\r\n                        >\r\n                            <FontAwesomeIcon icon={act.icon}/>\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nIndex.propTypes = {};\r\n\r\nexport default Index;\r\n","import React, {createRef, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './sidebar.css';\r\nimport Navigation from './Navigation';\r\nimport UseWindowSize from '../../utils/useWindowSize';\r\nimport QuickMenu from'../QuickMenu'\r\nimport {UseUserSession} from '../../utils/UserContext';\r\n\r\n/**\r\n * Sidebar navigation for application uses standard styling\r\n *\r\n * @param children\r\n * @returns {JSX.Element}\r\n */\r\nconst Index = ({children}) => {\r\n    const wrapperRef = createRef();\r\n    const windowSizes = UseWindowSize();\r\n    const OPEN_NAV_CLASS = 'is-nav-open';\r\n    const footerRef = createRef();\r\n    const contentRef = createRef();\r\n    const {logoutMethod} = UseUserSession();\r\n\r\n    const handleToggle = () => {\r\n        const wrapper = wrapperRef.current;\r\n        wrapper.classList.toggle(OPEN_NAV_CLASS);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const wrapper = wrapperRef.current;\r\n        const content = contentRef.current;\r\n        const FOOTER_CLASS = ['position-absolute', 'bottom-0', 'start-50', 'translate-middle'];\r\n\r\n        if (windowSizes.width >= 768 && !wrapper.classList.contains(OPEN_NAV_CLASS)) {\r\n            wrapper.classList.add(OPEN_NAV_CLASS)\r\n            content.classList.add(OPEN_NAV_CLASS)\r\n        }\r\n        if (windowSizes.width < 768 && wrapper.classList.contains(OPEN_NAV_CLASS)) {\r\n            wrapper.classList.remove(OPEN_NAV_CLASS);\r\n            content.classList.remove(OPEN_NAV_CLASS);\r\n        }\r\n\r\n        if (windowSizes.height > 400) footerRef.current.classList.add(...FOOTER_CLASS)\r\n        else footerRef.current.classList.remove(...FOOTER_CLASS)\r\n\r\n    }, [windowSizes, wrapperRef, footerRef, contentRef])\r\n\r\n    return (\r\n        <div className='d-flex flex-md-row flex-column position-relative min-vh-100'>\r\n            {/*Mobile*/}\r\n            <nav className='d-flex navbar w-100 navbar-dark bg-dark d-md-none ' data-testid='mobileMenu'>\r\n                <div className='container-fluid'>\r\n                    <a href='/' className='navbar-brand'>Aline</a>\r\n                    <button className='navbar-toggler'\r\n                            onClick={handleToggle}\r\n                            data-testid='mobileToggle'\r\n                    >\r\n                        <span className='navbar-toggler-icon'/>\r\n                    </button>\r\n                </div>\r\n\r\n            </nav>\r\n\r\n            {/*Sidebar*/}\r\n            <div\r\n                ref={wrapperRef}\r\n                className='d-flex min-vh-100 position-absolute position-fixed flex-column p-3 text-white bg-dark px-2 sidebar is-nav-open'\r\n                id='SidebarContent'\r\n            >\r\n                <a href='/'\r\n                   className='align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none'>\r\n                    <span className='fs-4'>Aline Financial</span>\r\n                </a>\r\n                <hr/>\r\n                <div className='nav nav-pills flex-column overflow-auto'>\r\n                    <Navigation/>\r\n                </div>\r\n\r\n\r\n                <div ref={footerRef}\r\n                     className=\"dropdown \">\r\n                    <hr className='w-100'/>\r\n                    <a href=\"/\"\r\n                       className=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\"\r\n                       id=\"navProfileDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" role='button'>\r\n\r\n                        <span>\r\n                            <svg xmlns='http://www.w3.org/2000/svg' height='16' width='16' fill='currentColor'\r\n                                 className='bi me-1'>\r\n                            <path\r\n                                d=\"M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z\"/>\r\n                            <path\r\n                                d=\"M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z\"/>\r\n                            </svg>\r\n                        </span>\r\n\r\n                        <strong>Settings</strong>\r\n                    </a>\r\n                    <ul className=\"dropdown-menu dropdown-menu-dark dropdown-menu-start text-small shadow\"\r\n                        aria-labelledby=\"navProfileDropdown\">\r\n                        <li><a className=\"dropdown-item\" href=\"/\">Profile</a></li>\r\n                        <li>\r\n                            <hr className=\"dropdown-divider\"/>\r\n                        </li>\r\n                        <li><button className=\"dropdown-item\" onClick={logoutMethod}>Sign out</button></li>\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div ref={contentRef} className='flex-grow-1 content is-nav-open'>\r\n                {children}\r\n            </div>\r\n\r\n            <QuickMenu/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nIndex.propTypes = {\r\n    children: PropTypes.element\r\n}\r\n\r\nexport default Index;\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport Sidebar from '../Sidebar'\r\nimport {UpdateUserSession, UseUserSession} from '../../utils/UserContext';\r\n\r\n/**\r\n * If user has a valid token, an administrator will be able to access\r\n * protected routes, else will be redirected to login\r\n * @returns {JSX.Element}\r\n */\r\nconst ProtectedRoute = ({component: Component, ...rest}) => {\r\n    const {loggedIn, authority} = UseUserSession();\r\n    const [loading, setLoading] = useState(true);\r\n    const {updateUser} = UpdateUserSession();\r\n\r\n    useEffect(() => {\r\n        if (!loggedIn && process.env.REACT_APP_TOKEN_NAME in localStorage) updateUser();\r\n        console.log(authority)\r\n        setLoading(false)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [authority])\r\n\r\n    return (\r\n        <div className='w-100'>\r\n            {loading? (\r\n                <div>I'm Loading</div>\r\n            ) : (\r\n                <Sidebar>\r\n                <Route\r\n                    {...rest}\r\n                    render={(props) =>\r\n                        loggedIn?\r\n                            (<Component {...props} />):\r\n                            (<Redirect to='/login'/>)\r\n                    }\r\n                />\r\n                </Sidebar>\r\n            )}\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n    component: PropTypes.func\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from './pages/Home'\r\nimport Login from './pages/Login'\r\nimport NotFound from './pages/NotFound';\r\nimport UserForm from './pages/UserForm'\r\nimport ApplicantForm from './pages/ApplicantForm';\r\nimport Users from './pages/Users'\r\nimport Transactions from './pages/Transactions'\r\nimport TransactionForm from './pages/TransactionForm'\r\nimport MemberAccounts from './pages/MemberAccounts'\r\nimport Members from './pages/Members'\r\nimport Chat from './pages/Chat'\r\nimport UserSessionProvider from './utils/UserContext';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {fab} from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n    faChevronUp,\r\n    faEllipsisV,\r\n    faHome,\r\n    faPlus,\r\n    faUserPlus,\r\n    faUsers,\r\n    faUsersCog,\r\n    faPen,\r\n    faSpinner,\r\n    faEye,\r\n    faEyeSlash\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nfunction App() {\r\n    library.add(fab, faPlus, faChevronUp, faHome, faUserPlus,\r\n        faUsers, faUsersCog, faEllipsisV, faPen, faSpinner,\r\n        faEye,faEyeSlash)\r\n    return (\r\n        <div>\r\n            <UserSessionProvider>\r\n                <Router>\r\n\r\n                    <Helmet>\r\n                        <title>Admin | Aline Financial</title>\r\n                        <meta\r\n                            name='description'\r\n                            content='Administrative Dashboard for Aline Financial'\r\n                        />\r\n                    </Helmet>\r\n                    <Switch>\r\n                        <Route exact path='/login' component={Login}/>\r\n                        <ProtectedRoute exact path='/' component={Home}/>\r\n                        <ProtectedRoute path='/user/create' component={UserForm}/>\r\n                        <ProtectedRoute path='/user' component={Users}/>\r\n                        <ProtectedRoute path='/member/accounts' component={MemberAccounts}/>\r\n                        <ProtectedRoute path='/member/create' component={ApplicantForm}/>\r\n                        <ProtectedRoute path='/member' component={Members}/>\r\n                        <ProtectedRoute path='/transaction/create' component={TransactionForm}/>\r\n                        <ProtectedRoute path='/transaction' component={Transactions}/>\r\n                        <ProtectedRoute path='/chat' component={Chat}/>\r\n                        <Route path='*' component={NotFound}/>\r\n                    </Switch>\r\n\r\n                </Router>\r\n\r\n            </UserSessionProvider>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style.scss';\r\nimport {QueryClient, QueryClientProvider} from 'react-query';\r\n\r\n\r\n//Entry point for Project\r\nconst queryClient = new QueryClient();\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <QueryClientProvider client={queryClient}>\r\n            <App/>\r\n        </QueryClientProvider>\r\n    </React.StrictMode>,\r\n\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}